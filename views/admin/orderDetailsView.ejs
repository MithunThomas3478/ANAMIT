<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Order Details #<%= order.orderNumber %></title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4f46e5;
            --secondary-color: #6b7280;
            --success-color: #10b981;
            --warning-color: #f59e0b;
            --danger-color: #ef4444;
            --border-radius: 0.5rem;
        }

        body {
            background-color: #f3f4f6;
            font-family: 'Inter', sans-serif;
        }

        .main-content {
            margin-left: var(--sidebar-width);
            padding: 2rem;
            transition: margin-left 0.3s ease;
        }

        .order-card {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
        }

        .card-header {
            background: var(--primary-color);
            color: white;
            padding: 1rem;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .order-status {
            padding: 0.5rem 1rem;
            border-radius: 2rem;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .status-pending { background: var(--warning-color); color: white; }
        .status-confirmed { background: var(--primary-color); color: white; }
        .status-processing { background: var(--warning-color); color: white; }
        .status-shipped { background: var(--primary-color); color: white; }
        .status-delivered { background: var(--success-color); color: white; }
        .status-cancelled { background: var(--danger-color); color: white; }

        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 1.5rem;
            padding: 1.5rem;
        }

        .info-box {
            background: #f8fafc;
            padding: 1rem;
            border-radius: var(--border-radius);
        }

        .info-label {
            color: var(--secondary-color);
            font-size: 0.875rem;
            margin-bottom: 0.5rem;
        }

        .info-value {
            font-weight: 500;
            color: #1f2937;
        }

        .product-item {
            display: grid;
            grid-template-columns: 100px 2fr 1fr 1fr;
            gap: 1rem;
            padding: 1rem;
            border-bottom: 1px solid #e5e7eb;
            align-items: center;
        }

        .product-image {
            width: 100px;
            height: 100px;
            object-fit: cover;
            border-radius: 0.5rem;
        }

        .tracking-form {
            padding: 1.5rem;
            background: #f8fafc;
            border-radius: var(--border-radius);
            margin-top: 1.5rem;
        }

        .timeline {
            margin-top: 1.5rem;
            padding-left: 2rem;
            border-left: 2px solid #e5e7eb;
        }

        .timeline-item {
            position: relative;
            padding: 1rem 0;
        }

        .timeline-item::before {
            content: '';
            position: absolute;
            left: -2.4rem;
            top: 1.5rem;
            width: 1rem;
            height: 1rem;
            border-radius: 50%;
            background: var(--primary-color);
        }

        .back-button {
            background: var(--primary-color);
            color: white;
            padding: 0.5rem 1rem;
            border-radius: var(--border-radius);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        .back-button:hover {
            background: #4338ca;
            color: white;
        }

        @media (max-width: 768px) {
            .product-item {
                grid-template-columns: 80px 1fr;
            }

            .product-price, .product-total {
                grid-column: span 2;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/admin/adminHeader') %>

    <main class="main-content">
        <a href="/admin/orders" class="back-button">
            <i class="fas fa-arrow-left"></i> Back to Orders
        </a>

        <div class="order-card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h2 class="mb-0">Order #<%= order.orderNumber %></h2>
                <span class="order-status status-<%= order.orderStatus %>">
                    <%= order.orderStatus.charAt(0).toUpperCase() + order.orderStatus.slice(1) %>
                </span>
            </div>

            <div class="info-grid">
                <div class="info-box">
                    <div class="info-label">Customer Information</div>
                    <div class="info-value">
                        <%= order.shippingAddress.fullName %><br>
                        <%= order.shippingAddress.phoneNumber %><br>
                        <%= order.user.email %>
                    </div>
                </div>

                <div class="info-box">
                    <div class="info-label">Shipping Address</div>
                    <div class="info-value">
                        <%= order.shippingAddress.streetAddress %><br>
                        <%= order.shippingAddress.city %>, <%= order.shippingAddress.state %><br>
                        <%= order.shippingAddress.pincode %>
                    </div>
                </div>

                <div class="info-box">
                    <div class="info-label">Payment Information</div>
                    <div class="info-value">
                        Method: <%= {
                            'cod': 'Cash on Delivery',
                            'razorpay': 'Online Payment',
                            'wallet': 'Wallet'
                        }[order.paymentMethod] %><br>
                        Status: <%= order.paymentStatus.charAt(0).toUpperCase() + order.paymentStatus.slice(1) %><br>
                       
                    </div>
                </div>

                <div class="info-grid">
                    <!-- Other info boxes remain the same -->
                    <div class="info-box">
                        <div class="info-label">Order Summary</div>
                        <div class="info-value">
                            <!-- Actual Total -->
                            <div class="d-flex justify-content-between mb-2">
                                <span>Actual Total:</span>
                                <span>₹<%= (order.orderSummary.actualTotal || 0).toFixed(2) %></span>
                            </div>
                    
                            <!-- Product Offers -->
                            <% if (order.orderSummary.productOffersTotal > 0) { %>
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span>Product Offers:</span>
                                    <span>-₹<%= order.orderSummary.productOffersTotal.toFixed(2) %></span>
                                </div>
                            <% } %>
                    
                            <!-- Category Offers -->
                            <% if (order.orderSummary.categoryOffersTotal > 0) { %>
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span>Category Offers:</span>
                                    <span>-₹<%= order.orderSummary.categoryOffersTotal.toFixed(2) %></span>
                                </div>
                            <% } %>
                    
                            <!-- Coupon Discount -->
                            <% if (order.orderSummary.couponDiscount > 0) { %>
                                <div class="d-flex justify-content-between mb-2 text-success">
                                    <span>Coupon Discount:</span>
                                    <span>-₹<%= order.orderSummary.couponDiscount.toFixed(2) %></span>
                                </div>
                            <% } %>
                    
                            <!-- Total Savings -->
                            <% if (order.orderSummary.totalDiscount > 0) { %>
                                <div class="d-flex justify-content-between mb-2 text-success fw-bold">
                                    <span>Total Savings:</span>
                                    <span>-₹<%= order.orderSummary.totalDiscount.toFixed(2) %></span>
                                </div>
                            <% } %>
                    
                            <!-- Shipping Fee -->
                            <div class="d-flex justify-content-between mb-2">
                                <span>Shipping Fee:</span>
                                <span>₹<%= (order.orderSummary.shippingFee || 0).toFixed(2) %></span>
                            </div>
                    
                            <hr>
                            <!-- Final Amount -->
                            <div class="d-flex justify-content-between fw-bold">
                                <span>Final Amount:</span>
                                <span>₹<%= (order.orderSummary.finalAmount || 0).toFixed(2) %></span>
                            </div>
                        </div>
                    </div>


                </div>
            </div>

            <div class="p-4">
                <h3 class="mb-3">Order Items</h3>
                <div class="order-items">
                    <% order.items.forEach(item => { %>
                        <div class="product-item">
                            <img src="<%= item.productImage %>" alt="<%= item.productName %>" class="product-image">
                            <div>
                                <h5 class="mb-1"><%= item.productName %></h5>
                                <p class="mb-1">Size: <%= item.selectedSize %> | Color: <%= item.selectedColor.colorName %></p>
                                <p class="mb-0">Status: 
                                    <span class="badge <%= item.status === 'active' ? 'bg-success' : 
                                                        item.status === 'cancelled' ? 'bg-danger' : 
                                                        'bg-warning' %>">
                                        <%= item.status.charAt(0).toUpperCase() + item.status.slice(1) %>
                                    </span>
                                </p>
                            </div>
                            <div class="product-price">
                                ₹<%= item.price.toFixed(2) %> × <%= item.quantity %>
                            </div>
                            <div class="product-total text-end">
                                ₹<%= item.itemTotal.toFixed(2) %>
                            </div>
                        </div>
                    <% }); %>
                </div>
            </div>
            <div class="p-4">
                <h3 class="mb-3">Return Requests</h3>
                <div class="return-requests">
                    <% order.items.forEach(item => { %>
                        <% if (item.status === 'return_pending') { %>
                            <div class="return-request-card bg-light p-3 rounded mb-3">
                                <div class="d-flex justify-content-between align-items-start">
                                    <div>
                                        <h5 class="mb-2"><%= item.productName %></h5>
                                        <p class="mb-1">Return requested on: <%= new Date(item.returnDetails.requestedAt).toLocaleDateString() %></p>
                                        <p class="mb-1">Reason: <%= item.returnDetails.reason %></p>
                                        <p class="mb-1">Condition: <%= item.returnDetails.condition %></p>
                                        <% if (item.returnDetails.comments) { %>
                                            <p class="mb-1">Customer Comments: <%= item.returnDetails.comments %></p>
                                        <% } %>
                                    </div>
                                    <span class="badge bg-warning">Return Pending</span>
                                </div>
                                
                                <div class="mt-3">
                                    <button onclick="handleReturn('<%= order._id %>', '<%= item._id %>', 'approve')" 
                                            class="btn btn-success btn-sm">
                                        <i class="fas fa-check"></i> Approve Return
                                    </button>
                                    <button onclick="showRejectModal('<%= order._id %>', '<%= item._id %>')"
                                            class="btn btn-danger btn-sm ms-2">
                                        <i class="fas fa-times"></i> Reject Return
                                    </button>
                                </div>
                            </div>
                        <% } %>
                    <% }); %>
                </div>
            </div>
            
            <!-- Reject Return Modal -->
            <div class="modal fade" id="rejectReturnModal" tabindex="-1">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Reject Return Request</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                        </div>
                        <div class="modal-body">
                            <form id="rejectReturnForm">
                                <div class="mb-3">
                                    <label for="rejectReason" class="form-label">Reason for Rejection</label>
                                    <textarea class="form-control" id="rejectReason" rows="3" required></textarea>
                                </div>
                            </form>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                            <button type="button" class="btn btn-danger" onclick="confirmRejectReturn()">Confirm Rejection</button>
                        </div>
                    </div>
                </div>
            </div>
            <% if (order.orderStatus === 'confirmed' || order.orderStatus === 'processing' || order.orderStatus === 'shipped') { %>
                <div class="tracking-form">
                    <h4>Update Tracking Information</h4>
                    <form id="trackingForm" class="mt-3">
                        <div class="row g-3">
                            <div class="col-md-4">
                                <label class="form-label">Courier Service</label>
                                <input type="text" class="form-control" name="courier" 
                                    value="<%= order.trackingDetails?.courier || '' %>">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Tracking Number</label>
                                <input type="text" class="form-control" name="trackingNumber"
                                    value="<%= order.trackingDetails?.trackingNumber || '' %>">
                            </div>
                            <div class="col-md-4">
                                <label class="form-label">Tracking URL</label>
                                <input type="url" class="form-control" name="trackingUrl"
                                    value="<%= order.trackingDetails?.trackingUrl || '' %>">
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary">Update Tracking</button>
                            </div>
                        </div>
                    </form>
                </div>
            <% } %>

            <div class="p-4">
                <h4>Order Timeline</h4>
                <div class="timeline">
                    <% order.statusHistory.sort((a, b) => b.timestamp - a.timestamp).forEach(status => { %>
                        <div class="timeline-item">
                            <div class="text-secondary">
                                <%= new Date(status.timestamp).toLocaleString() %>
                            </div>
                            <div class="fw-bold">
                                <%= status.status.charAt(0).toUpperCase() + status.status.slice(1) %>
                            </div>
                            <% if (status.comment) { %>
                                <div><%= status.comment %></div>
                            <% } %>
                        </div>
                    <% }); %>
                </div>
            </div>
        </div>
    </main>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        // Handle tracking form submission
    
        
                    let currentOrderId;
                let currentItemId;

            async function handleReturn(orderId, itemId, action) {
                try {
                    if (action === 'approve') {
                        const result = await Swal.fire({
                            title: 'Approve Return Request?',
                            text: 'This will process the refund to the customer\'s wallet',
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#10b981',
                            cancelButtonColor: '#ef4444',
                            confirmButtonText: 'Yes, approve return',
                            cancelButtonText: 'Cancel'
                        });

                        if (!result.isConfirmed) {
                            return;
                        }
                    }

                    const response = await fetch(`/admin/orders/${orderId}/items/${itemId}/return/${action}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            action: action
                        })
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.message || 'Failed to process return request');
                    }

                    // Show success message
                    await Swal.fire({
                        title: 'Success!',
                        text: data.message,
                        icon: 'success',
                        timer: 2000
                    });

                    // Reload page to show updated status
                    window.location.reload();

                } catch (error) {
                    console.error('Error:', error);
                    Swal.fire({
                        title: 'Error!',
                        text: error.message || 'Failed to process return request',
                        icon: 'error'
                    });
                }
            }

            function showRejectModal(orderId, itemId) {
                currentOrderId = orderId;
                currentItemId = itemId;
                
                // Clear previous reason if any
                document.getElementById('rejectReason').value = '';
                
                // Show the modal
                const modal = new bootstrap.Modal(document.getElementById('rejectReturnModal'));
                modal.show();
            }

            async function confirmRejectReturn() {
    try {
        const rejectReason = document.getElementById('rejectReason').value.trim();
        
        if (!rejectReason) {
            Swal.fire({
                title: 'Error!',
                text: 'Please provide a reason for rejection',
                icon: 'error'
            });
            return;
        }

        // Show loading state
        const confirmButton = document.querySelector('#rejectReturnModal .btn-danger');
        const originalButtonText = confirmButton.innerHTML;
        confirmButton.disabled = true;
        confirmButton.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Processing...';

        const response = await fetch(`/admin/orders/${currentOrderId}/items/${currentItemId}/return/reject`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                action: 'reject',
                rejectReason: rejectReason  // The key name must match what the server expects
            })
        });

        // Reset button state
        confirmButton.disabled = false;
        confirmButton.innerHTML = originalButtonText;

        const data = await response.json();

        if (!response.ok) {
            throw new Error(data.message || 'Failed to reject return request');
        }

        // Close the modal
        const modal = bootstrap.Modal.getInstance(document.getElementById('rejectReturnModal'));
        modal.hide();

        // Show success message
        await Swal.fire({
            title: 'Return Rejected',
            text: data.message,
            icon: 'success',
            timer: 2000
        });

        // Reload page to show updated status
        window.location.reload();

    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Failed to reject return request',
            icon: 'error'
        });
    }
}
    </script>
</body>
</html>