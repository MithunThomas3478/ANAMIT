<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Edit Coupon</title>
    
    <!-- CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    
    <style>
        /* Reusing the same styles from add coupon template */
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        
        .main-content {
            padding: 2rem;
        }
        
        .card {
            border: none;
            box-shadow: 0 0 15px rgba(0,0,0,0.1);
            border-radius: 10px;
        }
        
        .card-header {
            background-color: #4361ee;
            color: white;
            border-radius: 10px 10px 0 0 !important;
            padding: 1.5rem;
        }
        
        .card-title {
            margin-bottom: 0;
            font-size: 1.5rem;
            font-weight: 600;
        }
        
        .form-label {
            font-weight: 500;
            color: #344767;
            margin-bottom: 0.5rem;
        }
        
        .form-control, .form-select {
            border-radius: 8px;
            border: 1px solid #e9ecef;
            padding: 0.75rem 1rem;
            font-size: 0.875rem;
        }
        
        .form-control:focus, .form-select:focus {
            border-color: #4361ee;
            box-shadow: 0 0 0 0.2rem rgba(67, 97, 238, 0.25);
        }
        
        .input-group-text {
            background-color: #f8f9fa;
            border: 1px solid #e9ecef;
            border-radius: 8px;
        }
        
        .btn-save-coupon {
            background-color: #4361ee;
            color: white;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .btn-save-coupon:hover {
            background-color: #3250d5;
            color: white;
            transform: translateY(-1px);
        }
        
        .btn-back {
            background-color: #fff;
            color: #344767;
            border: 1px solid #e9ecef;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s ease;
        }
        
        .btn-back:hover {
            background-color: #f8f9fa;
            transform: translateY(-1px);
        }
        
        .validation-error {
            color: #dc3545;
            font-size: 0.875rem;
            margin-top: 0.25rem;
            display: none;
        }
        
        .help-text {
            color: #6c757d;
            font-size: 0.875rem;
            margin-top: 0.25rem;
        }
    </style>
</head>
<body>
    <%- include('../partials/admin/adminHeader') %>
    
    <div class="main-content">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h1 class="h3 mb-0 text-gray-800">Edit Coupon</h1>
                <a href="/admin/coupons" class="btn btn-back">
                    <i class="fas fa-arrow-left me-2"></i>Back to Coupons
                </a>
            </div>

            <div class="card">
                <div class="card-body p-4">
                    <form id="editCouponForm" data-coupon-id="<%= coupon._id %>" novalidate>
                        <!-- Basic Information -->
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label for="code" class="form-label">Coupon Code<span class="text-danger">*</span></label>
                                <input 
                                    type="text" 
                                    class="form-control text-uppercase" 
                                    id="code" 
                                    name="code" 
                                    required 
                                    maxlength="15"
                                    pattern="^[A-Za-z0-9]{1,15}$"
                                    value="<%= coupon.code %>"
                                >
                                <div class="validation-error" id="codeError"></div>
                                <small class="help-text">Only letters and numbers, max 15 characters</small>
                            </div>
                            
                            <div class="col-md-6 form-group">
                                <label for="description" class="form-label">Description</label>
                                <input 
                                    type="text" 
                                    class="form-control" 
                                    id="description" 
                                    name="description"
                                    maxlength="200"
                                    value="<%= coupon.description %>"
                                >
                                <div class="validation-error" id="descriptionError"></div>
                                <small class="help-text">Optional, max 200 characters</small>
                            </div>
                        </div>

                        <!-- Discount Details -->
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label for="discountValue" class="form-label">Discount Percentage<span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <input 
                                        type="number" 
                                        class="form-control" 
                                        id="discountValue" 
                                        name="discountValue" 
                                        required
                                        min="0"
                                        max="90"
                                        step="0.1"
                                        value="<%= coupon.discountValue %>"
                                    >
                                    <span class="input-group-text">%</span>
                                </div>
                                <div class="validation-error" id="discountValueError"></div>
                                <small class="help-text">Enter a value between 0 and 90</small>
                            </div>

                            <div class="col-md-4 form-group">
                                <label for="minPurchaseAmount" class="form-label">Minimum Purchase<span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <span class="input-group-text">₹</span>
                                    <input 
                                        type="number" 
                                        class="form-control" 
                                        id="minPurchaseAmount" 
                                        name="minPurchaseAmount" 
                                        required
                                        min="1"
                                        value="<%= coupon.minPurchaseAmount %>"
                                    >
                                </div>
                                <div class="validation-error" id="minPurchaseAmountError"></div>
                            </div>

                            <div class="col-md-4 form-group">
                                <label for="maxDiscountAmount" class="form-label">Maximum Discount<span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <span class="input-group-text">₹</span>
                                    <input 
                                        type="number" 
                                        class="form-control" 
                                        id="maxDiscountAmount" 
                                        name="maxDiscountAmount" 
                                        required
                                        min="1"
                                        value="<%= coupon.maxDiscountAmount %>"
                                    >
                                </div>
                                <div class="validation-error" id="maxDiscountAmountError"></div>
                                <small class="help-text">Must be less than minimum purchase amount</small>
                            </div>
                        </div>

                        <!-- Validity Period -->
                        <div class="row">
                            <div class="col-md-6 form-group">
                                <label for="validFrom" class="form-label">Valid From<span class="text-danger">*</span></label>
                                <input 
                                    type="datetime-local" 
                                    class="form-control" 
                                    id="validFrom" 
                                    name="validFrom" 
                                    required
                                    value="<%= formattedDates.validFrom %>"
                                >
                                <div class="validation-error" id="validFromError"></div>
                            </div>

                            <div class="col-md-6 form-group">
                                <label for="validUntil" class="form-label">Valid Until<span class="text-danger">*</span></label>
                                <input 
                                    type="datetime-local" 
                                    class="form-control" 
                                    id="validUntil" 
                                    name="validUntil" 
                                    required
                                    value="<%= formattedDates.validUntil %>"
                                >
                                <div class="validation-error" id="validUntilError"></div>
                            </div>
                        </div>

                        <!-- Usage Limits -->
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label for="usageLimit" class="form-label">Total Usage Limit</label>
                                <input 
                                    type="number" 
                                    class="form-control" 
                                    id="usageLimit" 
                                    name="usageLimit"
                                    min="1"
                                    value="<%= coupon.usageLimit || '' %>"
                                >
                                <div class="validation-error" id="usageLimitError"></div>
                                <small class="help-text">Leave empty for unlimited uses</small>
                            </div>

                            <div class="col-md-4 form-group">
                                <label for="perUserLimit" class="form-label">Per User Limit<span class="text-danger">*</span></label>
                                <input 
                                    type="number" 
                                    class="form-control" 
                                    id="perUserLimit" 
                                    name="perUserLimit" 
                                    required
                                    min="1"
                                    value="<%= coupon.perUserLimit %>"
                                >
                                <div class="validation-error" id="perUserLimitError"></div>
                            </div>

                            <div class="col-md-4 form-group">
                                <label for="usageCount" class="form-label">Current Usage Count</label>
                                <input 
                                    type="number" 
                                    class="form-control" 
                                    id="usageCount" 
                                    value="<%= coupon.usageCount %>"
                                    disabled
                                >
                                <small class="help-text">Total times this coupon has been used</small>
                            </div>
                        </div>

                        <!-- Status -->
                        <div class="form-group">
                            <div class="form-check">
                                <input 
                                    type="checkbox" 
                                    class="form-check-input" 
                                    id="isActive" 
                                    name="isActive" 
                                    <%= coupon.isActive ? 'checked' : '' %>
                                >
                                <label class="form-check-label" for="isActive">
                                    Coupon is active
                                </label>
                            </div>
                        </div>

                        <div class="d-flex justify-content-end gap-3 mt-4">
                            <button type="button" class="btn btn-back" onclick="window.location.href='/admin/coupons'">
                                Cancel
                            </button>
                            <button type="submit" class="btn btn-save-coupon" id="submitButton">
                                <i class="fas fa-save me-2"></i>Save Changes
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/admin/adminFooter') %>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('editCouponForm');
            const submitButton = document.getElementById('submitButton');
            const couponId = form.dataset.couponId;

            // Validation functions
            function showError(elementId, message) {
                const errorDiv = document.getElementById(elementId);
                errorDiv.textContent = message;
                errorDiv.style.display = 'block';
            }

            function clearError(elementId) {
                const errorDiv = document.getElementById(elementId);
                errorDiv.style.display = 'none';
            }

            function validateForm() {
                let isValid = true;
                
                // Clear all previous errors
                document.querySelectorAll('.validation-error').forEach(div => {
                    div.style.display = 'none';
                });

                // Code validation
                const code = document.getElementById('code').value.trim();
                if (!code || !/^[A-Za-z0-9]{1,15}$/.test(code)) {
                    showError('codeError', 'Invalid coupon code format');
                    isValid = false;
                }

                // Description validation
                const description = document.getElementById('description').value.trim();
                if (description.length > 200) {
                    showError('descriptionError', 'Description cannot exceed 200 characters');
                    isValid = false;
                }

                // Discount validation
                const discountValue = parseFloat(document.getElementById('discountValue').value);
                if (isNaN(discountValue) || discountValue < 0 || discountValue > 90) {
                    showError('discountValueError', 'Discount must be between 0 and 90%');
                    isValid = false;
                }

                // Amount validations
                const minPurchaseAmount = parseFloat(document.getElementById('minPurchaseAmount').value);
                const maxDiscountAmount = parseFloat(document.getElementById('maxDiscountAmount').value);

                if (isNaN(minPurchaseAmount) || minPurchaseAmount < 1) {
                    showError('minPurchaseAmountError', 'Minimum purchase amount must be at least 1');
                    isValid = false;
                }

                if (isNaN(maxDiscountAmount) || maxDiscountAmount < 1) {
                    showError('maxDiscountAmountError', 'Maximum discount amount must be at least 1');
                    isValid = false;
                }

                if (maxDiscountAmount >= minPurchaseAmount) {
                    showError('maxDiscountAmountError', 'Maximum discount must be less than minimum purchase amount');
                    isValid = false;
                }

                // Date validations
                const validFrom = new Date(document.getElementById('validFrom').value);
                const validUntil = new Date(document.getElementById('validUntil').value);

                if (isNaN(validFrom.getTime())) {
                    showError('validFromError', 'Please select a valid start date');
                    isValid = false;
                }

                if (isNaN(validUntil.getTime())) {
                    showError('validUntilError', 'Please select a valid end date');
                    isValid = false;
                }

                if (validUntil <= validFrom) {
                    showError('validUntilError', 'End date must be after start date');
                    isValid = false;
                }

                // Usage limit validation
                const usageLimit = document.getElementById('usageLimit').value;
                if (usageLimit && (isNaN(parseInt(usageLimit)) || parseInt(usageLimit) < 1)) {
                    showError('usageLimitError', 'Usage limit must be at least 1');
                    isValid = false;
                }

                // Per user limit validation
                const perUserLimit = parseInt(document.getElementById('perUserLimit').value);
                if (isNaN(perUserLimit) || perUserLimit < 1) {
                    showError('perUserLimitError', 'Per user limit must be at least 1');
                    isValid = false;
                }

                return isValid;
            }

            // Form submission
            form.addEventListener('submit', async function(event) {
                event.preventDefault();
                
                if (!validateForm()) {
                    return;
                }

                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Saving Changes...';

                try {
                    const formData = {
                        code: document.getElementById('code').value.trim().toUpperCase(),
                        description: document.getElementById('description').value.trim(),
                        discountValue: parseFloat(document.getElementById('discountValue').value),
                        minPurchaseAmount: parseFloat(document.getElementById('minPurchaseAmount').value),
                        maxDiscountAmount: parseFloat(document.getElementById('maxDiscountAmount').value),
                        validFrom: document.getElementById('validFrom').value,
                        validUntil: document.getElementById('validUntil').value,
                        usageLimit: document.getElementById('usageLimit').value || null,
                        perUserLimit: parseInt(document.getElementById('perUserLimit').value),
                        isActive: document.getElementById('isActive').checked
                    };

                    const response = await fetch(`/admin/coupons/edit/${couponId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });

                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.message || 'Failed to update coupon');
                    }

                    await Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Coupon updated successfully',
                        timer: 1500,
                        showConfirmButton: false
                    });

                    // Redirect to coupon list
                    window.location.href = '/admin/coupons';

                } catch (error) {
                    console.error('Error:', error);
                    
                    // Show error message
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: error.message || 'Failed to update coupon',
                        confirmButtonColor: '#4361ee'
                    });

                    // Re-enable submit button
                    submitButton.disabled = false;
                    submitButton.innerHTML = '<i class="fas fa-save me-2"></i>Save Changes';
                }
            });

            // Real-time validation
            const inputs = form.querySelectorAll('input, textarea');
            inputs.forEach(input => {
                input.addEventListener('input', function() {
                    clearError(`${this.id}Error`);
                });
            });

            // Amount validation
            document.getElementById('maxDiscountAmount').addEventListener('input', function() {
                const minPurchase = parseFloat(document.getElementById('minPurchaseAmount').value);
                const maxDiscount = parseFloat(this.value);
                
                if (!isNaN(minPurchase) && !isNaN(maxDiscount) && maxDiscount >= minPurchase) {
                    showError('maxDiscountAmountError', 'Maximum discount must be less than minimum purchase amount');
                } else {
                    clearError('maxDiscountAmountError');
                }
            });

            document.getElementById('minPurchaseAmount').addEventListener('input', function() {
                const maxDiscount = parseFloat(document.getElementById('maxDiscountAmount').value);
                const minPurchase = parseFloat(this.value);
                
                if (!isNaN(minPurchase) && !isNaN(maxDiscount) && maxDiscount >= minPurchase) {
                    showError('maxDiscountAmountError', 'Maximum discount must be less than minimum purchase amount');
                } else {
                    clearError('maxDiscountAmountError');
                }
            });
        });
    </script>
</body>
</html>