<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Wallet</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.32/sweetalert2.min.css" rel="stylesheet">
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f5f5f5;
        }

        .container {
            max-width: 1600px;
            margin: 3rem auto;
            padding: 0 3rem;
            width: 90%;
            position: relative;
        }

        .page-title {
            text-align: center;
            margin-bottom: 3rem;
            font-size: 32px;
            color: #333;
            font-weight: bold;
        }

        .profile-container {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 3rem;
            min-height: 600px;
        }

        .sidebar {
            background: white;
            border-radius: 12px;
            padding: 3rem 2rem;
            height: fit-content;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            background: #f0f0f0;
            border-radius: 50%;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-avatar i {
            font-size: 48px;
            color: #999;
        }

        .edit-btn {
            display: flex;
            justify-content: center;
            align-items: center;
            margin: auto;
            background-color: #ff8800;
            border-radius: 8px;
            border: none;
            color: #ffffff;
            font-size: 16px;
            height: 40px;
            width: 150px;
            text-decoration: none;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem;
            margin: 0.75rem 0;
            cursor: pointer;
            border-radius: 8px;
            color: #333;
            text-decoration: none;
            transition: all 0.3s;
            font-size: 16px;
        }

        .menu-item:hover {
            background-color: #f5f5f5;
            transform: translateX(5px);
        }

        .menu-item.active {
            background-color: #e7f3ff;
            color: #0066cc;
        }

        .menu-item i {
            margin-right: 1rem;
            width: 24px;
            font-size: 18px;
        }

        .logout-btn {
            background: #ff8800;
            color: white;
            border: none;
            padding: 1.25rem;
            width: 100%;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 3rem;
            font-weight: bold;
            font-size: 16px;
            transition: background-color 0.3s;
        }

        .logout-btn:hover {
            background: #ff7700;
        }

        .wallet-container {
            background: white;
            padding: 3rem;
            border-radius: 12px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .wallet-title {
            font-size: 24px;
            color: #333;
            margin-bottom: 2.5rem;
            font-weight: bold;
        }

        .wallet-balance {
            background: linear-gradient(135deg, #ff8800 0%, #ff6600 100%);
            border-radius: 12px;
            padding: 2rem;
            color: white;
            margin-bottom: 2rem;
        }

        .balance-label {
            font-size: 16px;
            margin-bottom: 0.5rem;
        }

        .balance-amount {
            font-size: 36px;
            font-weight: bold;
        }

        .wallet-summary {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .summary-card {
            background: white;
            padding: 1.5rem;
            border-radius: 8px;
            display: flex;
            align-items: center;
            gap: 1rem;
            box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        }

        .summary-icon {
            width: 48px;
            height: 48px;
            border-radius: 50%;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 20px;
            color: #666;
        }

        .summary-info {
            flex: 1;
        }

        .summary-label {
            font-size: 14px;
            color: #666;
            margin-bottom: 0.25rem;
        }

        .summary-value {
            font-size: 20px;
            font-weight: 600;
            color: #333;
        }

        .wallet-actions {
            display: flex;
            gap: 1rem;
            margin-bottom: 2rem;
        }

        .action-btn {
            padding: 1rem 2rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            font-size: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
            transition: all 0.3s;
        }

        .btn-add-money {
            background: #ff8800;
            color: white;
            flex: 1;
        }

        .btn-add-money:hover {
            background: #ff7700;
            transform: translateY(-2px);
        }

        .add-money-form {
            background: white;
            padding: 2rem;
            border-radius: 12px;
            margin-top: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            display: none;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: 500;
            color: #333;
        }

        .amount-suggestions {
            display: flex;
            gap: 1rem;
            margin-bottom: 1rem;
            flex-wrap: wrap;
        }

        .amount-btn {
            padding: 0.75rem 1.5rem;
            border: 1px solid #ddd;
            border-radius: 6px;
            background: white;
            cursor: pointer;
            transition: all 0.3s;
            font-size: 16px;
        }

        .amount-btn:hover {
            background: #f5f5f5;
            border-color: #ccc;
        }

        .form-group input[type="number"] {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
        }

        .amount-hint {
            color: #666;
            font-size: 14px;
            margin-top: 0.5rem;
        }

        .transaction-list {
            margin-top: 2rem;
        }

        .transaction-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 1.5rem;
            background: #f8f9fa;
            border-radius: 8px;
            margin-bottom: 1rem;
            transition: transform 0.3s;
        }

        .transaction-item:hover {
            transform: translateX(5px);
        }

        .transaction-info {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .transaction-icon {
            width: 40px;
            height: 40px;
            background: #e7f3ff;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: #0066cc;
        }

        .transaction-details h4 {
            font-size: 16px;
            color: #333;
            margin-bottom: 0.25rem;
        }

        .transaction-details p {
            font-size: 14px;
            color: #666;
        }

        .transaction-amount {
            font-weight: 600;
            font-size: 16px;
        }

        .amount-credit {
            color: #28a745;
        }

        .amount-debit {
            color: #dc3545;
        }

        .loading-spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #f3f3f3;
            border-top: 3px solid #ff8800;
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin-right: 8px;
        }
        .pagination-container {
        margin-top: 2rem;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 1rem;
    }

    .pagination {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .pagination-btn {
        display: flex;
        align-items: center;
        justify-content: center;
        min-width: 36px;
        height: 36px;
        padding: 0 0.75rem;
        border-radius: 6px;
        background: white;
        border: 1px solid #ddd;
        color: #333;
        text-decoration: none;
        transition: all 0.3s;
    }

    .pagination-btn:hover {
        background: #f5f5f5;
        border-color: #ccc;
    }

    .pagination-btn.active {
        background: #ff8800;
        border-color: #ff8800;
        color: white;
    }

    .pagination-ellipsis {
        color: #666;
        padding: 0 0.5rem;
    }

    .pagination-info {
        color: #666;
        font-size: 14px;
    }

    @media (max-width: 768px) {
        .pagination {
            flex-wrap: wrap;
            justify-content: center;
        }
        
        .pagination-btn {
            min-width: 32px;
            height: 32px;
            padding: 0 0.5rem;
        }
    }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 1200px) {
            .container {
                width: 95%;
                padding: 0 2rem;
            }
        }

        @media (max-width: 768px) {
            .profile-container {
                grid-template-columns: 1fr;
            }
            
            .wallet-summary {
                grid-template-columns: 1fr;
            }
            
            .wallet-actions {
                flex-direction: column;
            }
            
            .amount-suggestions {
                grid-template-columns: repeat(2, 1fr);
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>

    <div class="container">
        <h1 class="page-title">MY ACCOUNT</h1>
        
        <div class="profile-container">
            <!-- Sidebar -->
            <div class="sidebar">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
              
                <br>
                <a href="userProfile" class="menu-item ">
                    <i class="fas fa-user"></i>
                    Account Overview
                </a>
                <a href="orders" class="menu-item">
                    <i class="fas fa-box"></i>
                    My Orders
                </a>
                <a href="userAddress" class="menu-item">
                    <i class="fas fa-map-marker-alt"></i>
                    Manage Address
                </a>
                <a href="wallet" class="menu-item active">
                    <i class="fas fa-wallet"></i>
                    Wallet
                </a>
                <a href="passwordMangement" class="menu-item">
                    <i class="fas fa-lock"></i>
                    Manage Password
                </a>
                <a href="/logout"><button class="logout-btn">LOG OUT</button></a> 
            </div>

            <!-- Wallet Content -->
            <div class="wallet-container">
                <h2 class="wallet-title">My Wallet</h2>
                
                <div class="wallet-balance">
                    <div class="balance-label">Available Balance</div>
                    <div class="balance-amount">₹<%= wallet.balance.toFixed(2) %></div>
                </div>

                <div class="wallet-summary">
                    <div class="summary-card">
                        <div class="summary-icon">
                            <i class="fas fa-arrow-down"></i>
                        </div>
                        <div class="summary-info">
                            <div class="summary-label">Total Added</div>
                            <div class="summary-value amount-credit">₹<%= wallet.totalCredits.toFixed(2) %></div>
                        </div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-icon">
                            <i class="fas fa-arrow-up"></i>
                        </div>
                        <div class="summary-info">
                            <div class="summary-label">Total Spent</div>
                            <div class="summary-value amount-debit">₹<%= wallet.totalDebits.toFixed(2) %></div>
                        </div>
                    </div>
                    <div class="summary-card">
                        <div class="summary-icon">
                            <i class="fas fa-exchange-alt"></i>
                        </div>
                        <div class="summary-info">
                            <div class="summary-label">Transactions</div>
                            <div class="summary-value"><%= wallet.transactions.length %></div>
                        </div>
                    </div>
                </div>

                <div class="wallet-actions">
                    <button class="action-btn btn-add-money" onclick="showAddMoneyForm()">
                        <i class="fas fa-plus"></i>
                        Add Money
                    </button>
                </div>

                <!-- Add Money Form -->
                <form id="addMoneyForm" class="add-money-form">
                    <div class="form-group">
                        <label for="amount">Enter Amount (₹)</label>
                        <div class="amount-suggestions">
                            <button type="button" class="amount-btn" onclick="setAmount(500)">₹500</button>
                            <button type="button" class="amount-btn" onclick="setAmount(1000)">₹1000</button>
                            <button type="button" class="amount-btn" onclick="setAmount(2000)">₹2000</button>
                            <button type="button" class="amount-btn" onclick="setAmount(5000)">₹5000</button>
                        </div>
                        <input type="number" id="amount" name="amount" min="100" step="1" required>
                        <span class="amount-hint">Minimum amount: ₹100</span>
                    </div>
                    <div class="wallet-actions">
                        <button type="button" class="action-btn" onclick="hideAddMoneyForm()" style="background: #f5f5f5; color: #333;">
                            Cancel
                        </button>
                        <button type="submit" class="action-btn btn-add-money">
                            Proceed to Pay
                        </button>
                    </div>
                </form>

                <!-- Transactions List -->
                <div class="transaction-list">
                    <h3 class="wallet-title" style="font-size: 20px;">Recent Transactions</h3>
                    
                    <% if (wallet.transactions && wallet.transactions.length > 0) { %>
                        <% wallet.transactions.sort((a, b) => b.createdAt - a.createdAt).forEach(function(transaction) { %>
                            <div class="transaction-item">
                                <div class="transaction-info">
                                    <div class="transaction-icon">
                                        <i class="fas fa-<%= transaction.type === 'credit' ? 'arrow-down' : 'arrow-up' %>"></i>
                                    </div>
                                    <div class="transaction-details">
                                        <h4><%= transaction.description %></h4>
                                        <p><%= new Date(transaction.createdAt).toLocaleDateString('en-US', {
                                            year: 'numeric',
                                            month: 'short',
                                            day: 'numeric',
                                            hour: '2-digit',
                                            minute: '2-digit'
                                        }) %></p>
                                    </div>
                                </div>
                                <div class="transaction-amount <%= transaction.type === 'credit' ? 'amount-credit' : 'amount-debit' %>">
                                    <%= transaction.type === 'credit' ? '+' : '-' %>₹<%= transaction.amount.toFixed(2) %>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <div class="transaction-item" style="justify-content: center; color: #666;">
                            No transactions yet
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
        <div class="pagination-container">
            <% if (totalPages > 1) { %>
                <div class="pagination">
                    <% if (currentPage > 1) { %>
                        <a href="/wallet?page=<%= currentPage - 1 %>" class="pagination-btn">
                            <i class="fas fa-chevron-left"></i>
                        </a>
                    <% } %>
        
                    <% 
                    let startPage = Math.max(1, currentPage - 2);
                    let endPage = Math.min(totalPages, startPage + 4);
                    
                    if (endPage - startPage < 4) {
                        startPage = Math.max(1, endPage - 4);
                    }
                    %>
        
                    <% if (startPage > 1) { %>
                        <a href="/wallet?page=1" class="pagination-btn">1</a>
                        <% if (startPage > 2) { %>
                            <span class="pagination-ellipsis">...</span>
                        <% } %>
                    <% } %>
        
                    <% for (let i = startPage; i <= endPage; i++) { %>
                        <a href="/wallet?page=<%= i %>" 
                           class="pagination-btn <%= i === currentPage ? 'active' : '' %>">
                            <%= i %>
                        </a>
                    <% } %>
        
                    <% if (endPage < totalPages) { %>
                        <% if (endPage < totalPages - 1) { %>
                            <span class="pagination-ellipsis">...</span>
                        <% } %>
                        <a href="/wallet?page=<%= totalPages %>" class="pagination-btn"><%= totalPages %></a>
                    <% } %>
        
                    <% if (currentPage < totalPages) { %>
                        <a href="/wallet?page=<%= currentPage + 1 %>" class="pagination-btn">
                            <i class="fas fa-chevron-right"></i>
                        </a>
                    <% } %>
                </div>
        
                <div class="pagination-info">
                    Showing <%= startIndex + 1 %> to <%= Math.min(endIndex, totalTransactions) %> of <%= totalTransactions %> transactions
                </div>
            <% } %>
        </div>
    </div>

    <%- include('../partials/user/footer')%>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/limonte-sweetalert2/11.7.32/sweetalert2.min.js"></script>
    
    <script>
        function showToast(type, message) {
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });

            Toast.fire({
                icon: type,
                title: message
            });
        }

        function showAddMoneyForm() {
            document.getElementById('addMoneyForm').style.display = 'block';
            document.querySelector('.btn-add-money').style.display = 'none';
        }

        function hideAddMoneyForm() {
            Swal.fire({
                title: 'Cancel Transaction?',
                text: "Are you sure you want to cancel adding money?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ff8800',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, cancel it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    document.getElementById('addMoneyForm').style.display = 'none';
                    document.querySelector('.btn-add-money').style.display = 'flex';
                    document.getElementById('addMoneyForm').reset();
                }
            });
        }

        function setAmount(value) {
            document.getElementById('amount').value = value;
        }

        function initializeRazorpay(orderId, amount) {
            const options = {
                key: '<%= process.env.RAZORPAY_KEY_ID %>',
                amount: amount * 100,
                currency: 'INR',
                name: '<%= process.env.STORE_NAME %>',
                description: 'Wallet Recharge',
                order_id: orderId,
                handler: async function (response) {
                    try {
                        const verificationResponse = await fetch('/wallet/verify-payment', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                            },
                            body: JSON.stringify({
                                razorpay_order_id: response.razorpay_order_id,
                                razorpay_payment_id: response.razorpay_payment_id,
                                razorpay_signature: response.razorpay_signature
                            })
                        });

                        const result = await verificationResponse.json();
                        
                        if (result.success) {
                            showToast('success', 'Payment successful! Your wallet has been updated.');
                            setTimeout(() => window.location.reload(), 1500);
                        } else {
                            showToast('error', result.message || 'Payment verification failed');
                        }
                    } catch (error) {
                        console.error('Payment verification error:', error);
                        showToast('error', 'Failed to verify payment');
                    }
                },
                prefill: {
                    name: '<%= user.name %>',
                    email: '<%= user.email %>',
                    contact: '<%= user.phone %>'
                },
                theme: {
                    color: '#ff8800'
                },
                modal: {
                    ondismiss: function() {
                        document.getElementById('addMoneyForm').reset();
                        hideAddMoneyForm();
                    }
                }
            };

            const rzp = new Razorpay(options);
            rzp.open();
        }

        document.getElementById('addMoneyForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const amount = Number(document.getElementById('amount').value);
            if (!amount || amount < 100) {
                showToast('error', 'Minimum amount should be ₹100');
                return;
            }

            const submitButton = this.querySelector('button[type="submit"]');
            const originalText = submitButton.innerHTML;
            submitButton.disabled = true;
            submitButton.innerHTML = '<div class="loading-spinner"></div>Processing...';

            try {
                const response = await fetch('/wallet/create-order', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ amount })
                });

                const result = await response.json();
                
                if (result.success) {
                    initializeRazorpay(result.order.id, amount);
                } else {
                    showToast('error', result.message || 'Failed to create payment order');
                }
            } catch (error) {
                console.error('Payment initiation error:', error);
                showToast('error', 'An unexpected error occurred');
            } finally {
                submitButton.disabled = false;
                submitButton.innerHTML = originalText;
            }
        });

        // Logout functionality
        document.querySelector('.logout-btn').addEventListener('click', function() {
            Swal.fire({
                title: 'Logout',
                text: "Are you sure you want to logout?",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#ff8800',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, logout!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/logout';
                }
            });
        });
    </script>
</body>
</html>