<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ANAMIT - <%= category.name %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
   <style>
        :root {
            --primary-orange: #ff5722;
            --hover-orange: #f4511e;
            --dark-orange: #e64a19;
        }

        body {
            background-color: #f8f9fa;
        }

        /* Filter Sidebar */
        .filter-sidebar {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
            position: sticky;
            top: 100px;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .filter-sidebar h5, .filter-sidebar h6 {
            color: var(--dark-orange);
            position: relative;
            display: inline-block;
            margin-bottom: 15px;
        }

        .filter-sidebar h5::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 40px;
            height: 2px;
            background: var(--primary-orange);
        }

        /* Range Slider */
        .range-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 5px;
            border-radius: 5px;
            background: #ddd;
            outline: none;
        }

        .range-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: var(--primary-orange);
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 5px rgba(0,0,0,0.2);
        }

        /* Size Buttons */
        .btn-group {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .btn-group .btn-outline-secondary {
            border: 2px solid #e0e0e0;
            color: #333;
            transition: all 0.3s ease;
            flex: 1;
            min-width: 45px;
            padding: 8px;
        }

        .btn-group .btn-outline-secondary:hover:not(.disabled) {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }

        .btn-group .btn-outline-secondary.active {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
        }

        /* Color Options */
        .color-options {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 0 1px #ddd;
            transition: all 0.3s ease;
            position: relative;
        }

        .color-option:hover {
            transform: scale(1.1);
        }

        .color-option.selected {
            border: 2px solid var(--primary-orange);
            transform: scale(1.15);
            box-shadow: 0 0 0 1px var(--primary-orange);
        }

        .color-option::after {
            content: attr(title);
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.75rem;
            white-space: nowrap;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .color-option:hover::after {
            opacity: 1;
        }

        /* Sort Section */
        .sort-section {
            background: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
            margin-bottom: 20px;
        }

        .form-select {
            border-color: #e0e0e0;
            transition: all 0.3s ease;
        }

        .form-select:focus {
            border-color: var(--primary-orange);
            box-shadow: 0 0 0 0.2rem rgba(255, 87, 34, 0.25);
        }

        /* Products Grid */
        .products-wrapper {
            padding: 15px;
        }

        .product-card {
            background: white;
            border: none;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
            height: 100%;
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 20px rgba(255, 87, 34, 0.15);
        }

        .product-image-wrapper {
            position: relative;
            padding-top: 133%; /* 4:3 Aspect Ratio */
            overflow: hidden;
        }

        .product-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-badges {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .sale-badge {
            background-color: var(--primary-orange) !important;
            padding: 5px 10px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .product-info {
            padding: 15px;
        }

        .product-title {
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 10px;
            color: #333;
            transition: color 0.3s ease;
        }

        .product-card:hover .product-title {
            color: var(--primary-orange);
        }

        .price-container {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .current-price {
            font-size: 1.25rem;
            font-weight: bold;
            color: var(--primary-orange);
        }

        .original-price {
            font-size: 1rem;
            text-decoration: line-through;
            color: #95a5a6;
        }

        /* Pagination */
        .pagination {
            margin-top: 30px;
        }

        .pagination .page-link {
            color: var(--primary-orange);
            border-color: #dee2e6;
            padding: 8px 16px;
            transition: all 0.3s ease;
        }

        .pagination .page-link:hover {
            background-color: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }

        .pagination .active .page-link {
            background-color: var(--primary-orange);
            border-color: var(--primary-orange);
        }

        /* No Products Found */
        .no-products {
            text-align: center;
            padding: 40px 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
        }

        .no-products i {
            font-size: 3rem;
            color: var(--primary-orange);
            margin-bottom: 20px;
        }

        /* Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .spinner-grow {
            color: var(--primary-orange);
        }
        .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border-radius: 50%;
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        z-index: 2;
        border: none;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    }

    .wishlist-btn i {
        color: var(--primary-orange);
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }

    .wishlist-btn:hover i {
        transform: scale(1.1);
    }

    /* For product details page */
    .product-actions .wishlist-btn {
        position: static;
        width: 45px;
        height: 45px;
    }

    .product-actions .wishlist-btn i {
        font-size: 1.4rem;
    }
    .wishlist-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: white;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
    border: none;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.wishlist-btn:hover {
    transform: scale(1.1);
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

.wishlist-btn i {
    color: var(--primary-orange);
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

/* Animation for wishlist toggle */
.wishlist-btn i {
    transform-origin: center;
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.wishlist-btn:active i {
    transform: scale(1.3);
}

/* Animation for wishlist count update */
.count-updated {
    animation: countPulse 0.3s ease-in-out;
}

@keyframes countPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

/* Optional: Add a tooltip on hover */
.wishlist-btn::after {
    content: attr(title);
    position: absolute;
    bottom: -25px;
    right: 0;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.wishlist-btn:hover::after {
    opacity: 1;
    visibility: visible;
}
        /* Mobile Optimizations */
        @media (max-width: 992px) {
            .filter-sidebar {
                height: auto;
                position: static;
                margin-bottom: 20px;
            }

            .products-wrapper {
                padding: 10px;
            }
        }

        @media (max-width: 768px) {
            .product-image-wrapper {
                padding-top: 100%; /* Square aspect ratio for mobile */
            }
        }

        /* Filter Toggle for Mobile */
        .filter-toggle {
            display: none;
            margin-bottom: 15px;
        }

        @media (max-width: 992px) {
            .filter-toggle {
                display: block;
            }

            .filter-sidebar {
                display: none;
            }

            .filter-sidebar.show {
                display: block;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>

    <!-- Main Content -->
    <div class="container-fluid" style="padding-top: 100px;">
        <div class="row">
            <!-- Filter Toggle for Mobile -->
            <div class="col-12 d-lg-none">
                <button class="btn btn-outline-primary w-100 filter-toggle">
                    <i class="bi bi-funnel"></i> Show Filters
                </button>
            </div>

            <!-- Filters Sidebar -->
            <div class="col-lg-3">
                <div class="filter-sidebar">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Filters</h5>
                        <button class="btn btn-outline-secondary btn-sm" id="clearFilters">
                            <i class="bi bi-x-lg"></i> Clear All
                        </button>
                    </div>

                    <!-- Price Range -->
                    <div class="mb-4">
                        <h6>Price Range</h6>
                        <input type="range" class="range-slider" id="priceRange" 
                               min="<%= priceRange.minPrice %>" 
                               max="<%= priceRange.maxPrice %>" 
                               value="<%= currentFilters.maxPrice || priceRange.maxPrice %>">
                        <div class="d-flex justify-content-between mt-2">
                            <span>₹<%= priceRange.minPrice %></span>
                            <span>₹<span id="priceValue"><%= currentFilters.maxPrice || priceRange.maxPrice %></span></span>
                        </div>
                    </div>

                    <!-- Size Filter -->
                    <div class="mb-4">
                        <h6>Size</h6>
                        <div class="btn-group" role="group">
                            <% ['S', 'M', 'L', 'XL', 'XXL'].forEach(function(size) { %>
                                <input type="checkbox" class="btn-check size-filter" 
                                       id="size-<%= size.toLowerCase() %>" 
                                       value="<%= size %>"
                                       <%= currentFilters.sizes && currentFilters.sizes.includes(size) ? 'checked' : '' %>>
                                <label class="btn btn-outline-secondary" 
                                       for="size-<%= size.toLowerCase() %>"><%= size %></label>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Color Filter -->
                    <div class="mb-4">
                        <h6>Color</h6>
                        <div class="color-options">
                            <% if (colors && colors.length > 0) { %>
                                <% colors.forEach(function(color) { %>
                                    <span class="color-option color-filter 
                                                <%= currentFilters.colors && currentFilters.colors.includes(color.colorName) ? 'selected' : '' %>"
                                          data-color="<%= color.colorName %>" 
                                          style="background-color: <%= color.colorValue %>;"
                                          title="<%= color.colorName %>"></span>
                                <% }); %>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Products Section -->
            <div class="col-lg-9">
                <!-- Sort Section -->
                <div class="sort-section">
                    <div class="row align-items-center">
                        <div class="col-12 d-flex justify-content-end align-items-center">
                            <select class="form-select w-auto" id="sortSelect">
                                <option value="featured" <%= currentFilters.sort === 'featured' ? 'selected' : '' %>>
                                    Featured
                                </option>
                                <option value="popularity" <%= currentFilters.sort === 'popularity' ? 'selected' : '' %>>
                                    Popularity
                                </option>
                                <option value="price_asc" <%= currentFilters.sort === 'price_asc' ? 'selected' : '' %>>
                                    Price: Low to High
                                </option>
                                <option value="price_desc" <%= currentFilters.sort === 'price_desc' ? 'selected' : '' %>>
                                    Price: High to Low
                                </option>
                                <option value="newest" <%= currentFilters.sort === 'newest' ? 'selected' : '' %>>
                                    New Arrivals
                                </option>
                                <option value="name_asc" <%= currentFilters.sort === 'name_asc' ? 'selected' : '' %>>
                                    Name: A to Z
                                </option>
                                <option value="name_desc" <%= currentFilters.sort === 'name_desc' ? 'selected' : '' %>>
                                    Name: Z to A
                                </option>
                            </select>
                        </div>
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="products-wrapper">
                    <% if (products && products.length > 0) { %>
                        <div class="row g-4">
                            <% products.forEach(function(product) { %>
                                <div class="col-6 col-md-4 col-lg-4">
                                    <div class="product-card">
                                        <div class="product-image-wrapper">
                                            <button class="wishlist-btn" 
                                                    onclick="toggleWishlist('<%= product._id %>')"
                                                    data-wishlist-id="<%= product._id %>"
                                                    title="<%= product.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>">
                                                    <i class="<%= product.isInWishlist ? 'fa-solid' : 'fa-regular' %> fa-heart"></i>
                                            </button>
                                            <a href="/productDetails/<%= product._id %>">
                                                <img src="<%= product.variants[0].productImage[0] %>" 
                                                     class="product-image" 
                                                     alt="<%= product.productName %>">
                                            </a>
                                            <div class="product-badges">
                                                <% if (product.productOffer > 0) { %>
                                                    <span class="badge sale-badge">
                                                        <%= product.productOffer %>% OFF
                                                    </span>
                                                <% } %>
                                            </div>
                                        </div>
                                        <div class="product-info">
                                            <a href="/productDetails/<%= product._id %>" class="text-decoration-none">
                                                <h3 class="product-title"><%= product.productName %></h3>
                                            </a>
                                            <div class="price-container">
                                                <% const originalPrice = product.variants[0].colorVariant[0].price; %>
                                                <% const discountedPrice = originalPrice * (1 - product.productOffer/100); %>
                                                
                                                <% if (product.productOffer > 0) { %>
                                                    <span class="original-price">₹<%= originalPrice.toFixed(2) %></span>
                                                <% } %>
                                                <span class="current-price">₹<%= discountedPrice.toFixed(2) %></span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>

                        <!-- Pagination -->
                        <% if (pagination.totalPages > 1) { %>
                            <nav aria-label="Product navigation" class="mt-4">
                                <ul class="pagination justify-content-center">
                                    <% if (pagination.hasPreviousPage) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%= pagination.previousPage %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                                <i class="bi bi-chevron-left"></i>
                                            </a>
                                        </li>
                                    <% } %>

                                    <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                                        <li class="page-item <%= pagination.currentPage === i ? 'active' : '' %>">
                                            <a class="page-link" href="?page=<%= i %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                                <%= i %>
                                            </a>
                                        </li>
                                    <% } %>

                                    <% if (pagination.hasNextPage) { %>
                                        <li class="page-item">
                                            <a class="page-link" href="?page=<%= pagination.nextPage %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                                <i class="bi bi-chevron-right"></i>
                                            </a>
                                        </li>
                                    <% } %>
                                </ul>
                            </nav>
                        <% } %>
                    <% } else { %>
                        <!-- No Products Found -->
                        <div class="no-products">
                            <i class="bi bi-search"></i>
                            <h3>No Products Found</h3>
                            <p class="text-muted">Try adjusting your filter criteria</p>
                            <button class="btn btn-primary mt-3" onclick="clearAllFilters()">
                                Clear All Filters
                            </button>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/user/footer')%>

    <!-- Loading Overlay -->
    <div class="loading-overlay" style="display: none;">
        <div class="spinner-grow" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>

    <!-- Scripts -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Elements
            const sortSelect = document.getElementById('sortSelect');
            const priceRange = document.getElementById('priceRange');
            const priceValue = document.getElementById('priceValue');
            const clearFiltersBtn = document.getElementById('clearFilters');
            const filterToggleBtn = document.querySelector('.filter-toggle');
            const filterSidebar = document.querySelector('.filter-sidebar');
            const loadingOverlay = document.querySelector('.loading-overlay');

            // URL Parameter Management
            function updateURLParameters(params) {
                const url = new URL(window.location.href);
                Object.keys(params).forEach(key => {
                    if (params[key]) {
                        url.searchParams.set(key, params[key]);
                    } else {
                        url.searchParams.delete(key);
                    }
                });
                return url.toString();
            }

            // Show/Hide Loading
            function showLoading() {
                loadingOverlay.style.display = 'flex';
            }

            function hideLoading() {
                loadingOverlay.style.display = 'none';
            }

            // Handle Sorting
            sortSelect.addEventListener('change', function() {
                showLoading();
                window.location.href = updateURLParameters({
                    sort: this.value,
                    page: 1
                });
            });

            // Handle Price Range
            let priceUpdateTimeout;
            priceRange.addEventListener('input', function() {
                priceValue.textContent = this.value;
                clearTimeout(priceUpdateTimeout);
                priceUpdateTimeout = setTimeout(() => {
                    showLoading();
                    window.location.href = updateURLParameters({
                        maxPrice: this.value,
                        page: 1
                    });
                }, 500);
            });

            // Handle Size Filters
            document.querySelectorAll('.size-filter').forEach(filter => {
                filter.addEventListener('change', function() {
                    const selectedSizes = Array.from(document.querySelectorAll('.size-filter:checked'))
                        .map(cb => cb.value);
                    
                    showLoading();
                    window.location.href = updateURLParameters({
                        sizes: selectedSizes.join(','),
                        page: 1
                    });
                });
            });

            // Handle Color Filters
            document.querySelectorAll('.color-filter').forEach(filter => {
                filter.addEventListener('click', function() {
                    this.classList.toggle('selected');
                    const selectedColors = Array.from(document.querySelectorAll('.color-filter.selected'))
                        .map(color => color.getAttribute('data-color'));
                    
                    showLoading();
                    window.location.href = updateURLParameters({
                        colors: selectedColors.join(','),
                        page: 1
                    });
                });
            });

            // Clear All Filters
            function clearAllFilters() {
                showLoading();
                window.location.href = window.location.pathname;
            }

            clearFiltersBtn.addEventListener('click', clearAllFilters);
            window.clearAllFilters = clearAllFilters;

            // Mobile Filter Toggle
            if (filterToggleBtn) {
                filterToggleBtn.addEventListener('click', function() {
                    filterSidebar.classList.toggle('show');
                    this.innerHTML = filterSidebar.classList.contains('show') 
                        ? '<i class="bi bi-funnel-fill"></i> Hide Filters'
                        : '<i class="bi bi-funnel"></i> Show Filters';
                });
            }

            // Handle page load and unload
            window.addEventListener('beforeunload', showLoading);
            window.addEventListener('load', hideLoading);
        });
        async function toggleWishlist(productId) {
    try {
        const response = await fetch('/toggleWishlist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ productId })
        });
        
        const data = await response.json();
        
        if (data.success) {
            // Find all wishlist buttons for this product (in case it appears multiple times)
            const wishlistBtns = document.querySelectorAll(`[data-wishlist-id="${productId}"]`);
            
            wishlistBtns.forEach(wishlistBtn => {
                const icon = wishlistBtn.querySelector('i');
                if (data.isInWishlist) {
                    // Update to filled heart icon
                    icon.classList.remove('fa-regular');
                    icon.classList.add('fa-solid');
                    wishlistBtn.setAttribute('title', 'Remove from Wishlist');
                } else {
                    // Update to outlined heart icon
                    icon.classList.remove('fa-solid');
                    icon.classList.add('fa-regular');
                    wishlistBtn.setAttribute('title', 'Add to Wishlist');
                }
            });

            // Update wishlist count in header if it exists
            const wishlistCountElement = document.getElementById('wishlistCount');
            if (wishlistCountElement && data.wishlistCount !== undefined) {
                wishlistCountElement.textContent = data.wishlistCount;
                // Optional: Add animation class for count change
                wishlistCountElement.classList.add('count-updated');
                setTimeout(() => wishlistCountElement.classList.remove('count-updated'), 300);
            }

            // Show success notification
            Swal.fire({
                text: data.message,
                icon: data.isInWishlist ? 'success' : 'info',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true
            });
        } else {
            // Show error notification
            Swal.fire({
                text: data.message || 'Failed to update wishlist',
                icon: 'error',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });

            // If unauthorized, redirect to login
            if (response.status === 401) {
                setTimeout(() => {
                    window.location.href = '/login';
                }, 2000);
            }
        }
    } catch (error) {
        console.error('Wishlist error:', error);
        Swal.fire({
            text: 'Something went wrong. Please try again.',
            icon: 'error',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
    }
}
    </script>
</body>
</html>