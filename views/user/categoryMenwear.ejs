<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ANAMIT - Mens Fashion</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <style>
        /* Filter Sidebar */
        .filter-sidebar {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
        }

        /* Product Card */
        .product-card {
            border: none;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            margin-bottom: 20px;
            border-radius: 12px;
            overflow: hidden;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 20px rgba(255, 87, 34, 0.15);
        }

        .product-image {
            height: 250px;
            object-fit: cover;
        }

        .sale-badge {
            background-color: var(--primary-orange) !important;
            padding: 8px 15px;
            font-weight: 500;
        }

        .price {
            font-size: 1.2rem;
            font-weight: bold;
            color: var(--primary-orange);
        }

        .original-price {
            text-decoration: line-through;
            color: #95a5a6;
            margin-right: 8px;
        }

        .quick-view-btn {
            background-color: var(--primary-orange);
            color: white;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .product-card:hover .quick-view-btn {
            opacity: 1;
        }

        /* Color Options */
        .color-option {
            width: 25px;
            height: 25px;
            border-radius: 50%;
            display: inline-block;
            margin-right: 8px;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 0 1px #ddd;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .color-option:hover {
            transform: scale(1.1);
        }

        .color-option.selected {
            border: 2px solid var(--primary-orange);
            transform: scale(1.15);
            box-shadow: 0 0 0 1px var(--primary-orange);
        }
        /* Sort and View Options */
        .form-select:focus {
            border-color: var(--primary-orange);
            box-shadow: 0 0 0 0.2rem rgba(255, 87, 34, 0.25);
        }

        .view-btn.active {
            background-color: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
        }
        /* Range Slider */
        .range-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 5px;
            border-radius: 5px;
            background: #ddd;
            outline: none;
        }

        .range-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: var(--primary-orange);
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 5px rgba(0,0,0,0.2);
        }
         /* Add to Cart Button */
         .add-to-cart {
            background: var(--primary-orange);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .add-to-cart:hover {
            background: var(--hover-orange);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(255, 87, 34, 0.2);
        }
        /* List View */
        .list-view .product-card {
            display: flex;
            flex-direction: row;
            height: 200px;
        }

        .list-view .product-image {
            width: 200px;
            height: 100%;
        }

        .list-view .card-body {
            flex: 1;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .btn-outline-secondary {
            border: 2px solid #e0e0e0;
            color: #333;
            transition: all 0.3s ease;
        }

        .btn-outline-secondary:hover:not(.disabled) {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }

        .btn-outline-secondary.active {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
        }

        /* Quick View Modal */
        .modal-backdrop {
            background-color: rgba(0, 0, 0, 0.5);
        }

        .quick-view-modal .modal-content {
            border-radius: 8px;
            border: none;
        }

        /* Loading Spinner */
        .loading-spinner {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.8);
            z-index: 9999;
            justify-content: center;
            align-items: center;
        }

        .spinner-border {
            width: 3rem;
            height: 3rem;
        }

        /* Product Container Styles */
        .products-wrapper {
            padding: 20px 15px;
        }

        #productsContainer {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
            gap: 25px;
            padding: 20px;
            margin: 0;
        }

        .product-card {
            height: 100%;
            display: flex;
            flex-direction: column;
            margin: 0;
            background: #fff;
            position: relative;
            overflow: hidden;
        }

        .product-card .card-body {
            padding: 16px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            flex-grow: 1;
        }

        .product-image {
            width: 100%;
            height: 300px;
            object-fit: cover;
            border-radius: 8px 8px 0 0;
        }

        .product-card .card-title {
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 10px;
            color: #333;
            position: relative;
            display: inline-block;
        }
        .card-title::after {
            content: '';
            position: absolute;
            bottom: -2px;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary-orange);
            transition: width 0.3s ease;
        }
        .product-card .price-container {
            /* margin: 10px 0; */
            position: relative;
            padding: 5px 0;
        }
        .price-container::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 0;
            height: 2px;
            background: var(--primary-orange);
            transition: width 0.3s ease;
        }

        .product-card:hover .price-container::after {
            width: 100%;
        }
          /* Filter Title Styling */
          .filter-sidebar h5, .filter-sidebar h6 {
            color: var(--dark-orange);
            position: relative;
            display: inline-block;
            margin-bottom: 15px;
        }

        .filter-sidebar h5::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 40px;
            height: 2px;
            background: var(--primary-orange);
        }
        #clearFilters:hover {
            background: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }
        /* Responsive adjustments */
        @media (max-width: 1200px) {
            #productsContainer {
                grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
                gap: 20px;
            }
        }

        @media (max-width: 768px) {
            #productsContainer {
                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
            }
            
            .product-card .card-body {
                padding: 10px;
            }

            .price {
                font-size: 1rem;
            }
        }

        @media (max-width: 576px) {
            #productsContainer {
                grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));
                gap: 10px;
                padding: 10px;
            }

            .product-image {
                height: 200px;
            }

            .product-card .card-body {
                padding: 12px;
            }
        }

        /* Responsive */
        @media (max-width: 768px) {
            .list-view .product-card {
                flex-direction: column;
                height: auto;
            }

            .list-view .product-image {
                width: 100%;
                height: 250px;
            }
            
            .filter-sidebar {
                margin-bottom: 20px;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>

    <!-- Main Content -->
    <div class="container-fluid px-4" style="padding-top: 150px;">
        <div class="row">
            <!-- Filters Sidebar -->
            <div class="col-lg-2 mb-4 ps-0">
                <div class="filter-sidebar">
                    <h5 class="mb-3">Filters</h5>

                    <!-- Price Range -->
                    <div class="mb-4">
                        <h6>Price Range</h6>
                        <input type="range" class="range-slider" id="priceRange" 
                               min="0" max="1000" value="1000">
                        <div class="d-flex justify-content-between mt-2">
                            <span>₹0</span>
                            <span>₹<span id="priceValue">1000</span></span>
                        </div>
                    </div>

                    <!-- Size -->
                    <div class="mb-4">
                        <h6>Size</h6>
                        <div class="btn-group" role="group">
                            <% ['S', 'M', 'L', 'XL', 'XXL', '3XL'].forEach(function(size) { %>
                                <input type="checkbox" class="btn-check size-filter" 
                                       id="size-<%= size.toLowerCase() %>" value="<%= size %>">
                                <label class="btn btn-outline-secondary" 
                                       for="size-<%= size.toLowerCase() %>"><%= size %></label>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Color -->
                    <div class="mb-4">
                        <h6>Color</h6>
                        <div>
                            <% if (colors && colors.length > 0) { %>
                                <% colors.forEach(function(color) { %>
                                    <span class="color-option color-filter" 
                                          data-color="<%= color.colorName %>" 
                                          style="background-color: <%= color.colorValue %>;"></span>
                                <% }); %>
                            <% } %>
                        </div>
                    </div>

                    <!-- Clear Filters Button -->
                    <button class="btn btn-outline-secondary w-100" id="clearFilters">Clear Filters</button>
                </div>
            </div>

            <!-- Products Section -->
            <div class="col-lg-10">
                <!-- Sort and View Options -->
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <select class="form-select" id="sortSelect">
                            <option value="featured">Sort by: Featured</option>
                            <option value="price_asc">Price: Low to High</option>
                            <option value="price_desc">Price: High to Low</option>
                            <option value="newest">Newest First</option>
                        </select>
                    </div>
                    <div>
                        <span class="me-2">View:</span>
                        <button class="btn btn-outline-secondary btn-sm me-1 view-btn" data-view="grid">
                            <i class="bi bi-grid"></i>
                        </button>
                        <button class="btn btn-outline-secondary btn-sm view-btn" data-view="list">
                            <i class="bi bi-list"></i>
                        </button>
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="products-wrapper">
                    <div id="productsContainer">
                        <% products.forEach(function(product) { %>
                            <div class="product-card-wrapper">
                                <div class="card product-card">
                                    <% if (product.productOffer > 0) { %>
                                        <span class="badge bg-danger sale-badge">
                                            <%= product.productOffer %>% OFF
                                        </span>
                                    <% } %>
                                    <a href="/productDetails/<%=product._id%>">
                                        <img src="<%= product.variants[0].productImage[0] %>" 
                                             class="product-image" 
                                             alt="<%= product.productName %>">
                                    </a>
                                    <div class="card-body">
                                        <div>
                                            <h5 class="card-title"><%= product.productName %></h5>
                                            <div class="price-container">
                                                <% if (product.productOffer > 0) { %>
                                                    <span class="original-price">
                                                        ₹<%= product.variants[0].colorVariant[0].price %>
                                                    </span>
                                                <% } %>
                                                <span class="price">
                                                    ₹<%= (product.variants[0].colorVariant[0].price * 
                                                         (1 - product.productOffer/100)).toFixed(2) %>
                                                </span>
                                            </div>
                                        </div>
                                        
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <%- include('../partials/user/footer')%>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Product Listing Elements
            const productsContainer = document.getElementById('productsContainer');
            const priceRange = document.getElementById('priceRange');
            const priceValue = document.getElementById('priceValue');
            const sortSelect = document.getElementById('sortSelect');
            const clearFiltersBtn = document.getElementById('clearFilters');
            const viewBtns = document.querySelectorAll('.view-btn');
            
            // Product Detail Elements
            let currentVariant = null;
            let currentSize = null;
            let zoomActive = false;
            let mainImage, zoomLens, zoomedImage;

            // Shared State
            let activeFilters = {
                categories: [],
                colors: [],
                sizes: [],
                maxPrice: 1000,
                sort: 'featured'
            };

            // Initialize Product Detail Elements if on detail page
            function initializeProductDetail() {
                mainImage = document.getElementById('mainImage');
                zoomLens = document.querySelector('.zoom-lens');
                zoomedImage = document.querySelector('.zoomed-image');

                if (mainImage && zoomLens && zoomedImage) {
                    // Initialize zoom functionality
                    initZoom();
                    
                    // Set initial variant and size if available
                    const initialVariantElement = document.querySelector('.color-swatch');
                    if (initialVariantElement) {
                        const variantData = JSON.parse(initialVariantElement.getAttribute('data-variant'));
                        currentVariant = variantData;
                        currentSize = variantData.sizes[0]?.size;
                        updatePriceAndStock();
                    }
                }
            }

            // Product Detail Functions
            function changeMainImage(src, thumbnail) {
                if(!src || !thumbnail || !mainImage) return;
                
                mainImage.src = src;
                document.querySelectorAll('.thumbnail').forEach(thumb => {
                    thumb.classList.remove('active');
                });
                thumbnail.classList.add('active');
                
                hideZoom();
                initZoom();
            }

            function changeColor(element) {
                if(!element) return;
                
                try {
                    document.querySelectorAll('.color-swatch').forEach(swatch => {
                        swatch.classList.remove('active');
                    });
                    
                    element.classList.add('active');
                    const variantData = JSON.parse(element.getAttribute('data-variant'));
                    currentVariant = variantData;

                    const thumbnailContainer = document.querySelector('.thumbnail-container');
                    thumbnailContainer.innerHTML = variantData.images.map((image, index) => `
                        <img src="${image}" 
                             alt="Product view ${index + 1}" 
                             class="thumbnail ${index === 0 ? 'active' : ''}"
                             onclick="changeMainImage('${image}', this)">
                    `).join('');

                    mainImage.src = variantData.images[0];
                    updateSizeButtons(variantData.sizes);
                    
                    if(variantData.sizes && variantData.sizes.length > 0) {
                        currentSize = variantData.sizes[0].size;
                    }
                    
                    updatePriceAndStock();
                    hideZoom();
                    initZoom();
                    
                } catch(error) {
                    console.error('Error changing color:', error);
                    toastr.error('Error changing product color');
                }
            }

            function updateSizeButtons(sizes) {
                if(!sizes) return;
                const sizeButtons = document.getElementById('sizeButtons');
                if(!sizeButtons) return;

                sizeButtons.innerHTML = sizes.map(size => `
                    <button class="size-button"
                            data-size="${size.size}"
                            ${size.stock === 0 ? 'disabled' : ''}
                            onclick="selectSize(this)">
                        ${size.size}
                    </button>
                `).join('');
            }

            function selectSize(button) {
                if(!button) return;
                
                document.querySelectorAll('.size-button').forEach(btn => {
                    btn.classList.remove('active');
                });
                button.classList.add('active');
                currentSize = button.dataset.size;
                updatePriceAndStock();
            }

            function updatePriceAndStock() {
                if(!currentVariant || !currentSize) return;
                
                const sizeData = currentVariant.sizes.find(s => s.size === currentSize);
                if (sizeData) {
                    const priceElement = document.getElementById('currentPrice');
                    const stockElement = document.getElementById('stockInfo');
                    if(priceElement) priceElement.textContent = sizeData.price;
                    if(stockElement) stockElement.textContent = sizeData.stock;
                }
            }

            // Zoom Functions
            function initZoom() {
                if(!mainImage || !zoomLens || !zoomedImage) return;
                
                const cx = zoomedImage.offsetWidth / zoomLens.offsetWidth;
                const cy = zoomedImage.offsetHeight / zoomLens.offsetHeight;

                zoomedImage.style.backgroundImage = `url(${mainImage.src})`;
                zoomedImage.style.backgroundSize = `${mainImage.width * cx}px ${mainImage.height * cy}px`;

                mainImage.addEventListener('mousemove', moveZoomLens);
                zoomLens.addEventListener('mousemove', moveZoomLens);
                mainImage.addEventListener('mouseenter', showZoom);
                mainImage.addEventListener('mouseleave', hideZoom);
            }

            function moveZoomLens(e) {
                if (!zoomActive || !mainImage || !zoomLens || !zoomedImage) return;

                e.preventDefault();
                const pos = getCursorPos(e);
                let x = pos.x - (zoomLens.offsetWidth / 2);
                let y = pos.y - (zoomLens.offsetHeight / 2);

                if (x > mainImage.width - zoomLens.offsetWidth) {
                    x = mainImage.width - zoomLens.offsetWidth;
                }
                if (x < 0) x = 0;
                if (y > mainImage.height - zoomLens.offsetHeight) {
                    y = mainImage.height - zoomLens.offsetHeight;
                }
                if (y < 0) y = 0;

                zoomLens.style.left = x + "px";
                zoomLens.style.top = y + "px";

                zoomedImage.style.backgroundPosition = 
                    `-${x * (zoomedImage.offsetWidth / zoomLens.offsetWidth)}px ` +
                    `-${y * (zoomedImage.offsetHeight / zoomLens.offsetHeight)}px`;
            }

            function getCursorPos(e) {
                const rect = mainImage.getBoundingClientRect();
                return {
                    x: e.pageX - rect.left - window.scrollX,
                    y: e.pageY - rect.top - window.scrollY
                };
            }

            function showZoom() {
                zoomActive = true;
                zoomLens.style.display = "block";
                zoomedImage.style.display = "block";
            }

            function hideZoom() {
                zoomActive = false;
                if(zoomLens) zoomLens.style.display = "none";
                if(zoomedImage) zoomedImage.style.display = "none";
            }

            // Product Listing Event Handlers
            if(priceRange) {
                priceRange.addEventListener('input', function() {
                    priceValue.textContent = this.value;
                    activeFilters.maxPrice = parseInt(this.value);
                    debounce(applyFilters, 300)();
                });
            }

            if(sortSelect) {
                sortSelect.addEventListener('change', function() {
                    activeFilters.sort = this.value;
                    applyFilters();
                });
            }

            if(clearFiltersBtn) {
                clearFiltersBtn.addEventListener('click', function() {
                    // Reset all filters
                    activeFilters = {
                        categories: [],
                        colors: [],
                        sizes: [],
                        maxPrice: 1000,
                        sort: 'featured'
                    };

                    // Reset UI
                    document.querySelectorAll('.category-filter').forEach(cb => {
                        if (!cb.disabled) cb.checked = false;
                    });
                    document.querySelectorAll('.size-filter').forEach(cb => cb.checked = false);
                    document.querySelectorAll('.color-filter').forEach(color => {
                        color.classList.remove('selected');
                    });
                    if(priceRange) {
                        priceRange.value = 1000;
                        priceValue.textContent = '1000';
                    }
                    if(sortSelect) sortSelect.value = 'featured';

                    applyFilters();
                });
            }

            // Initialize both product listing and detail functionalities
            initializeProductDetail();
            initializeFilters();
            initializeViewSwitcher();

            // Helper Functions
            function debounce(func, wait) {
                let timeout;
                return function executedFunction(...args) {
                    const later = () => {
                        clearTimeout(timeout);
                        func(...args);
                    };
                    clearTimeout(timeout);
                    timeout = setTimeout(later, wait);
                };
            }

            function showLoading() {
                const spinner = document.querySelector('.loading-spinner');
                if (spinner) spinner.style.display = 'flex';
            }

            function hideLoading() {
                const spinner = document.querySelector('.loading-spinner');
                if (spinner) spinner.style.display = 'none';
            }

            // Initialize Toastr
            toastr.options = {
                closeButton: true,
                progressBar: true,
                positionClass: "toast-top-right",
                timeOut: 3000,
                extendedTimeOut: 1000,
            };

            // Make functions available globally for onclick handlers
            window.changeMainImage = changeMainImage;
            window.changeColor = changeColor;
            window.selectSize = selectSize;
            window.addToCart = addToCart;
        });
    </script>