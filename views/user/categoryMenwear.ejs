<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ANAMIT - <%= category.name %></title>
    <!-- Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css">
    <style>
        :root {
            --primary-orange: #ff5722;
            --hover-orange: #f4511e;
            --dark-orange: #e64a19;
        }

        body {
            background-color: #f8f9fa;
        }

        /* Filter Sidebar */
        .filter-sidebar {
            background-color: white;
            padding: 20px;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
            position: sticky;
            top: 100px;
            height: calc(100vh - 120px);
            overflow-y: auto;
        }

        .filter-sidebar h5, .filter-sidebar h6 {
            color: var(--dark-orange);
            position: relative;
            display: inline-block;
            margin-bottom: 15px;
        }

        .filter-sidebar h5::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 40px;
            height: 2px;
            background: var(--primary-orange);
        }

        /* Range Slider */
        .range-slider {
            -webkit-appearance: none;
            width: 100%;
            height: 5px;
            border-radius: 5px;
            background: #ddd;
            outline: none;
        }

        .range-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: var(--primary-orange);
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 5px rgba(0,0,0,0.2);
        }

        /* Size Buttons */
        .btn-group {
            display: flex;
            flex-wrap: wrap;
            gap: 5px;
        }

        .btn-group .btn-outline-secondary {
            border: 2px solid #e0e0e0;
            color: #333;
            transition: all 0.3s ease;
            flex: 1;
            min-width: 45px;
            padding: 8px;
        }

        .btn-group .btn-outline-secondary:hover:not(.disabled) {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }

        .btn-group .btn-outline-secondary.active {
            background: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
        }
        .size-filter-container {
    display: flex;
    flex-wrap: wrap;
    gap: 8px;
    margin-top: 12px;
}

.size-checkbox {
    position: relative;
}

.size-checkbox input {
    display: none;
}

.size-label {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 48px;
    height: 48px;
    border: 1px solid #e0e0e0;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.2s ease;
    background: white;
    margin: 0;
}

.size-text {
    font-size: 14px;
    color: #212121;
}

.size-checkbox input:checked + .size-label {
    border-color: var(--primary-orange);
    background-color: #fff3f0;
}

.size-checkbox input:checked + .size-label .size-text {
    color: var(--primary-orange);
    font-weight: 500;
}

.size-label:hover {
    border-color: var(--primary-orange);
    background-color: #fff3f0;
}

/* Color Filter Styles */
.color-filter-container {
    display: flex;
    flex-direction: column;
    gap: 12px;
    margin-top: 12px;
    max-height: 200px;
    overflow-y: auto;
    padding-right: 8px;
}

.color-checkbox {
    position: relative;
}

.color-checkbox input {
    display: none;
}

.color-label {
    display: flex;
    align-items: center;
    gap: 12px;
    cursor: pointer;
    padding: 8px;
    border-radius: 4px;
    transition: all 0.2s ease;
    margin: 0;
}

.color-swatch {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    border: 1px solid #e0e0e0;
    box-shadow: 0 1px 3px rgba(0,0,0,0.1);
}

.color-name {
    font-size: 14px;
    color: #212121;
}

.color-checkbox input:checked + .color-label {
    background-color: #fff3f0;
}

.color-checkbox input:checked + .color-label .color-name {
    color: var(--primary-orange);
    font-weight: 500;
}

.color-label:hover {
    background-color: #f5f5f5;
}

/* Custom scrollbar for color filter */
.color-filter-container::-webkit-scrollbar {
    width: 4px;
}

.color-filter-container::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.color-filter-container::-webkit-scrollbar-thumb {
    background: var(--primary-orange);
    border-radius: 4px;
}

.color-filter-container::-webkit-scrollbar-thumb:hover {
    background: var(--hover-orange);
}
        /* Color Options */
        .color-options {
            display: flex;
            flex-wrap: wrap;
            gap: 8px;
        }

        .color-option {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            cursor: pointer;
            border: 2px solid white;
            box-shadow: 0 0 0 1px #ddd;
            transition: all 0.3s ease;
            position: relative;
        }

        .color-option:hover {
            transform: scale(1.1);
        }

        .color-option.selected {
            border: 2px solid var(--primary-orange);
            transform: scale(1.15);
            box-shadow: 0 0 0 1px var(--primary-orange);
        }

        .color-option::after {
            content: attr(title);
            position: absolute;
            bottom: -25px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 0.75rem;
            white-space: nowrap;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .color-option:hover::after {
            opacity: 1;
        }
       .search-container {
        position: relative;
        display: flex;
        align-items: center;
    }

    .search-bar {
        padding-right: 60px; /* Space for clear and search buttons */
        border: 2px solid var(--primary-orange);
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(255, 87, 34, 0.1);
    }

    .search-bar:focus {
        border-color: var(--primary-orange);
        box-shadow: 0 0 0 0.2rem rgba(255, 87, 34, 0.25);
        outline: none;
    }

    .search-button, .search-clear-btn {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        background: none;
        border: none;
        color: var(--primary-orange);
        transition: all 0.3s ease;
    }

    .search-button {
        right: 35px;
    }

    .search-clear-btn {
        right: 10px;
        display: none; /* Hidden when no text */
    }

    .search-button:hover, .search-clear-btn:hover {
        color: var(--dark-orange);
        transform: translateY(-50%) scale(1.1);
    }

    /* Autocomplete Suggestions */
    .search-suggestions {
        position: absolute;
        top: 100%;
        left: 0;
        width: 100%;
        max-height: 300px;
        overflow-y: auto;
        background: white;
        border: 1px solid #ddd;
        border-top: none;
        z-index: 1000;
        box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        display: none;
    }

    .search-suggestions.show {
        display: block;
    }

    .search-suggestions-item {
        padding: 10px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }

    .search-suggestions-item:hover {
        background-color: #f0f0f0;
    }

    /* Enhanced Sort Select */
    .sort-select-container {
        position: relative;
    }

    .custom-select {
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
        background: white url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='0 0 12 12'%3E%3Cpath d='M1 4l5 5 5-5z' fill='%23ff5722'/%3E%3C/svg%3E") no-repeat right 10px center;
        background-size: 12px;
        padding-right: 30px;
        border: 2px solid var(--primary-orange);
        transition: all 0.3s ease;
    }

    .custom-select:focus {
        border-color: var(--primary-orange);
        box-shadow: 0 0 0 0.2rem rgba(255, 87, 34, 0.25);
        outline: none;
    }

    /* Mobile Responsive Adjustments */
    @media (max-width: 768px) {
        .search-container, .sort-select-container {
            width: 100%;
        }

        .sort-section .row {
            flex-direction: column;
        }

        .sort-section .row > div {
            margin-bottom: 10px;
        }
    }

        /* Products Grid */
        .products-wrapper {
            padding: 15px;
        }

        .product-card {
            background: white;
            border: none;
            border-radius: 12px;
            overflow: hidden;
            transition: all 0.3s ease;
            height: 100%;
            position: relative;
        }

        .product-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 20px rgba(255, 87, 34, 0.15);
        }

        .product-image-wrapper {
            position: relative;
            padding-top: 133%; /* 4:3 Aspect Ratio */
            overflow: hidden;
        }

        .product-image {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.3s ease;
        }

        .product-card:hover .product-image {
            transform: scale(1.05);
        }

        .product-badges {
            position: absolute;
            top: 10px;
            right: 10px;
            display: flex;
            flex-direction: column;
            gap: 5px;
        }

        .sale-badge {
            background-color: var(--primary-orange) !important;
            padding: 5px 10px;
            font-size: 0.875rem;
            font-weight: 500;
        }

        .product-info {
            padding: 15px;
        }

        .product-title {
            font-size: 1rem;
            font-weight: 500;
            margin-bottom: 10px;
            color: #333;
            transition: color 0.3s ease;
        }

        .product-card:hover .product-title {
            color: var(--primary-orange);
        }

        .price-container {
        display: flex;
        align-items: center;
        gap: 8px;
        flex-wrap: wrap;
    }

    .original-price {
        font-size: 1rem;
        text-decoration: line-through;
        color: #95a5a6;
    }

    .current-price {
        font-size: 1.25rem;
        font-weight: bold;
        color: var(--primary-orange);
    }

    .offer-badge {
        padding: 2px 8px;
        border-radius: 4px;
        background-color: #e8f5e9;
        font-size: 0.75rem;
    }

    /* Update product badges section */
    .product-badges {
        position: absolute;
        top: 10px;
        left: 10px; /* Changed from right to left */
        display: flex;
        flex-direction: column;
        gap: 5px;
        z-index: 1;
    }

    .discount-badge {
        background-color: var(--primary-orange) !important;
        color: white;
        padding: 5px 10px;
        font-size: 0.875rem;
        font-weight: 500;
        border-radius: 4px;
    }
    .subcategory-list {
    max-height: 300px;
    overflow-y: auto;
    padding-right: 10px;
}

.subcategory-item {
    margin-bottom: 10px;
}

.subcategory-item .form-check {
    margin-bottom: 8px;
}

.subcategory-item .form-check-label {
    color: #333;
    font-size: 0.9rem;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
}

.product-count {
    color: #666;
    font-size: 0.8rem;
}

.form-check-input:checked + .form-check-label {
    color: var(--primary-orange);
    font-weight: 500;
}

/* Custom scrollbar for subcategory list */
.subcategory-list::-webkit-scrollbar {
    width: 4px;
}

.subcategory-list::-webkit-scrollbar-track {
    background: #f1f1f1;
}

.subcategory-list::-webkit-scrollbar-thumb {
    background: var(--primary-orange);
    border-radius: 4px;
}

.subcategory-list::-webkit-scrollbar-thumb:hover {
    background: var(--hover-orange);
}

        /* Pagination */
        .pagination {
            margin-top: 30px;
        }

        .pagination .page-link {
            color: var(--primary-orange);
            border-color: #dee2e6;
            padding: 8px 16px;
            transition: all 0.3s ease;
        }

        .pagination .page-link:hover {
            background-color: var(--primary-orange);
            border-color: var(--primary-orange);
            color: white;
            transform: translateY(-2px);
        }

        .pagination .active .page-link {
            background-color: var(--primary-orange);
            border-color: var(--primary-orange);
        }

        /* No Products Found */
        .no-products {
            text-align: center;
            padding: 40px 20px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 15px rgba(255, 87, 34, 0.1);
        }

        .no-products i {
            font-size: 3rem;
            color: var(--primary-orange);
            margin-bottom: 20px;
        }

        /* Loading Overlay */
        .loading-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.9);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 9999;
        }

        .spinner-grow {
            color: var(--primary-orange);
        }
        .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border-radius: 50%;
        width: 35px;
        height: 35px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        z-index: 2;
        border: none;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    }

    .wishlist-btn i {
        color: var(--primary-orange);
        font-size: 1.2rem;
        transition: all 0.3s ease;
    }

    .wishlist-btn:hover i {
        transform: scale(1.1);
    }

    /* For product details page */
    .product-actions .wishlist-btn {
        position: static;
        width: 45px;
        height: 45px;
    }

    .product-actions .wishlist-btn i {
        font-size: 1.4rem;
    }
    .wishlist-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    background: white;
    border-radius: 50%;
    width: 35px;
    height: 35px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 2;
    border: none;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}

.wishlist-btn:hover {
    transform: scale(1.1);
    box-shadow: 0 3px 8px rgba(0,0,0,0.15);
}

.wishlist-btn i {
    color: var(--primary-orange);
    font-size: 1.2rem;
    transition: all 0.3s ease;
}

/* Animation for wishlist toggle */
.wishlist-btn i {
    transform-origin: center;
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.wishlist-btn:active i {
    transform: scale(1.3);
}

/* Animation for wishlist count update */
.count-updated {
    animation: countPulse 0.3s ease-in-out;
}

@keyframes countPulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); }
}

/* Optional: Add a tooltip on hover */
.wishlist-btn::after {
    content: attr(title);
    position: absolute;
    bottom: -25px;
    right: 0;
    background: rgba(0, 0, 0, 0.8);
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s ease;
}

.wishlist-btn:hover::after {
    opacity: 1;
    visibility: visible;
}

        /* Mobile Optimizations */
        @media (max-width: 992px) {
            .filter-sidebar {
                height: auto;
                position: static;
                margin-bottom: 20px;
            }

            .products-wrapper {
                padding: 10px;
            }
        }

        @media (max-width: 768px) {
            .product-image-wrapper {
                padding-top: 100%; /* Square aspect ratio for mobile */
            }
        }

        /* Filter Toggle for Mobile */
        .filter-toggle {
            display: none;
            margin-bottom: 15px;
        }

        @media (max-width: 992px) {
            .filter-toggle {
                display: block;
            }

            .filter-sidebar {
                display: none;
            }

            .filter-sidebar.show {
                display: block;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>

    <!-- Main Content -->
    <div class="container-fluid" style="padding-top: 100px;">
        <div class="row">
            <!-- Filter Toggle for Mobile -->
            <div class="col-12 d-lg-none">
                <button class="btn btn-outline-primary w-100 filter-toggle">
                    <i class="bi bi-funnel"></i> Show Filters
                </button>
            </div>

            <!-- Filters Sidebar -->
            <div class="col-lg-3">
                <div class="filter-sidebar">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <h5 class="mb-0">Filters</h5>
                        <button class="btn btn-outline-secondary btn-sm" id="clearFilters">
                            <i class="bi bi-x-lg"></i> Clear All
                        </button>
                    </div>
                    <div class="mb-4">
                        <h6>Categories</h6>
                        <div class="subcategory-list">
                            <% if (subcategories && subcategories.length > 0) { %>
                                <% subcategories.forEach(function(subcat) { %>
                                    <div class="subcategory-item">
                                        <div class="form-check">
                                            <input 
                                                class="form-check-input subcategory-filter" 
                                                type="checkbox" 
                                                value="<%= subcat._id %>" 
                                                id="subcat-<%= subcat._id %>"
                                                <%= currentFilters.subcategories && currentFilters.subcategories.includes(subcat._id.toString()) ? 'checked' : '' %>
                                            >
                                            <label class="form-check-label" for="subcat-<%= subcat._id %>">
                                                <%= subcat.name %>
                                                
                                            </label>
                                        </div>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p class="text-muted">No subcategories available</p>
                            <% } %>
                        </div>
                    </div>
                    <!-- Price Range -->
                    <div class="mb-4">
                        <h6>Price Range</h6>
                        <input type="range" class="range-slider" id="priceRange" 
                               min="<%= priceRange.minPrice %>" 
                               max="<%= priceRange.maxPrice %>" 
                               value="<%= currentFilters.maxPrice || priceRange.maxPrice %>">
                        <div class="d-flex justify-content-between mt-2">
                            <span>₹<%= priceRange.minPrice %></span>
                            <span>₹<span id="priceValue"><%= currentFilters.maxPrice || priceRange.maxPrice %></span></span>
                        </div>
                    </div>

                    <!-- Size Filter -->
                    <div class="mb-4">
                        <h6>SIZE</h6>
                        <div class="size-filter-container">
                            <% ['S', 'M', 'L', 'XL', 'XXL'].forEach(function(size) { %>
                                <div class="size-checkbox">
                                    <input type="checkbox" 
                                           class="size-filter" 
                                           id="size-<%= size.toLowerCase() %>" 
                                           value="<%= size %>"
                                           <%= currentFilters.sizes && currentFilters.sizes.includes(size) ? 'checked' : '' %>>
                                    <label for="size-<%= size.toLowerCase() %>" class="size-label">
                                        <span class="size-text"><%= size %></span>
                                    </label>
                                </div>
                            <% }); %>
                        </div>
                    </div>

                    <!-- Color Filter -->
                    <div class="mb-4">
                        <h6>COLOR</h6>
                        <div class="color-filter-container">
                            <% if (colors && colors.length > 0) { %>
                                <% colors.forEach(function(color) { %>
                                    <div class="color-checkbox">
                                        <input type="checkbox" 
                                               class="color-filter" 
                                               id="color-<%= color.colorName.toLowerCase().replace(/\s+/g, '-') %>"
                                               value="<%= color.colorName %>"
                                               <%= currentFilters.colors && currentFilters.colors.includes(color.colorName) ? 'checked' : '' %>>
                                        <label for="color-<%= color.colorName.toLowerCase().replace(/\s+/g, '-') %>" class="color-label">
                                            <span class="color-swatch" style="background-color: <%= color.colorValue %>"></span>
                                            <span class="color-name"><%= color.colorName %></span>
                                        </label>
                                    </div>
                                <% }); %>
                            <% } %>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Products Section -->
            <div class="col-lg-9">
                <!-- Sort Section -->
                <div class="col-lg-9">
                    <!-- Sort Section -->
                    <div class="sort-section">
                        <div class="row align-items-center">
                            <div class="col-12 col-md-6 mb-3 mb-md-0">
                                <div class="search-container">
                                    <input 
                                        type="text" 
                                        class="search-bar form-control" 
                                        id="searchInput" 
                                        placeholder="Search for products..."
                                        autocomplete="off"
                                    >
                                    <button type="button" class="search-button" aria-label="Search">
                                        <i class="bi bi-search"></i>
                                    </button>
                                    <button type="button" class="search-clear-btn" aria-label="Clear search">
                                        <i class="bi bi-x-circle-fill"></i>
                                    </button>
                                    <div class="search-suggestions" id="searchSuggestions"></div>
                                </div>
                            </div>
                            <div class="col-12 col-md-6 d-flex justify-content-end align-items-center">
                                <div class="sort-select-container">
                                    <select 
                                        class="form-select custom-select w-auto" 
                                        id="sortSelect" 
                                        aria-label="Sort products"
                                    >
                                        <option 
                                            value="featured" 
                                            <%= currentFilters.sort === 'featured' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-star-fill me-2"></i> Featured
                                        </option>
                                        <option 
                                            value="popularity" 
                                            <%= currentFilters.sort === 'popularity' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-fire me-2"></i> Popularity
                                        </option>
                                        <option 
                                            value="price_asc" 
                                            <%= currentFilters.sort === 'price_asc' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-arrow-up me-2"></i> Price: Low to High
                                        </option>
                                        <option 
                                            value="price_desc" 
                                            <%= currentFilters.sort === 'price_desc' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-arrow-down me-2"></i> Price: High to Low
                                        </option>
                                        <option 
                                            value="newest" 
                                            <%= currentFilters.sort === 'newest' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-clock me-2"></i> New Arrivals
                                        </option>
                                        <option 
                                            value="name_asc" 
                                            <%= currentFilters.sort === 'name_asc' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-sort-alpha-down me-2"></i> Name: A to Z
                                        </option>
                                        <option 
                                            value="name_desc" 
                                            <%= currentFilters.sort === 'name_desc' ? 'selected' : '' %>
                                        >
                                            <i class="bi bi-sort-alpha-up me-2"></i> Name: Z to A
                                        </option>
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- End of Sort Section -->
                </div>

            <!-- Products Grid -->
            <div class="products-wrapper">
                <% if (products && products.length > 0) { %>
                    <div class="row g-4">
                        <% products.forEach(function(product) { %>
                            <div class="col-6 col-md-4 col-lg-4">
                                <div class="product-card">
                                    <div class="product-image-wrapper">
                                        <button class="wishlist-btn" 
                                        onclick="toggleWishlist('<%= product._id %>')"
                                        data-wishlist-id="<%= product._id %>"
                                        title="<%= product.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist' %>">
                                        <i class="<%= product.isInWishlist ? 'fa-solid' : 'fa-regular' %> fa-heart"></i>
                                  </button>
                                    </button>
                                        <a href="/productDetails/<%= product._id %>">
                                            <img src="<%= product.variants[0].productImage[0] %>" 
                                                 class="product-image" 
                                                 alt="<%= product.productName %>">
                                        </a>
                                        <div class="product-badges">
                                            <% if (product.productOffer > 0) { %>
                                                <span class="badge sale-badge">
                                                    <%= product.productOffer %>% OFF
                                                </span>
                                            <% } %>
                                        </div>
                                    </div>
                                    <div class="product-info">
                                        <a href="/productDetails/<%= product._id %>" class="text-decoration-none">
                                            <h3 class="product-title"><%= product.productName %></h3>
                                        </a>
                                        <div class="price-container">
                                            <% 
                                                const originalPrice = product.variants[0].colorVariant[0].price;
                                                const finalPrice = product.finalPrice;
                                            %>
                                            <% if (product.hasOffer) { %>
                                                <span class="original-price">₹<%= originalPrice.toFixed(2) %></span>
                                                <span class="current-price">₹<%= finalPrice.toFixed(2) %></span>
                                                <% if (product.discountPercentage > 0) { %>
                                                    <span class="discount-badge">
                                                        <%= product.discountPercentage %>% OFF
                                                    </span>
                                                <% } %>
                                                <span class="offer-badge ms-2">
                                                    <% if (product.appliedOfferType === 'category' && categoryOffer) { %>
                                                        <small class="text-success">Category Offer</small>
                                                    <% } else if (product.appliedOfferType === 'product') { %>
                                                        <small class="text-success">Special Offer</small>
                                                    <% } %>
                                                </span>
                                            <% } else { %>
                                                <span class="current-price">₹<%= originalPrice.toFixed(2) %></span>
                                            <% } %>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    </div>

                    <!-- Pagination -->
                    <% if (pagination.totalPages > 1) { %>
                        <nav aria-label="Product navigation" class="mt-4">
                            <ul class="pagination justify-content-center">
                                <% if (pagination.hasPreviousPage) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= pagination.previousPage %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                            <i class="bi bi-chevron-left"></i>
                                        </a>
                                    </li>
                                <% } %>

                                <% for(let i = 1; i <= pagination.totalPages; i++) { %>
                                    <li class="page-item <%= pagination.currentPage === i ? 'active' : '' %>">
                                        <a class="page-link" href="?page=<%= i %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                            <%= i %>
                                        </a>
                                    </li>
                                <% } %>

                                <% if (pagination.hasNextPage) { %>
                                    <li class="page-item">
                                        <a class="page-link" href="?page=<%= pagination.nextPage %>&<%= new URLSearchParams(currentFilters).toString() %>">
                                            <i class="bi bi-chevron-right"></i>
                                        </a>
                                    </li>
                                <% } %>
                            </ul>
                        </nav>
                    <% } %>
                <% } else { %>
                    <!-- No Products Found -->
                    <div class="no-products">
                        <i class="bi bi-search"></i>
                        <h3>No Products Found</h3>
                        <p class="text-muted">Try adjusting your filter criteria</p>
                        <button class="btn btn-primary mt-3" onclick="clearAllFilters()">
                            Clear All Filters
                        </button>
                    </div>
                <% } %>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/user/footer')%>

<!-- Loading Overlay -->
<div class="loading-overlay" style="display: none;">
    <div class="spinner-grow" role="status">
        <span class="visually-hidden">Loading...</span>
    </div>
</div>

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" rel="stylesheet">
<script>
  document.addEventListener('DOMContentLoaded', function() {
        const productsWrapper = document.querySelector('.products-wrapper');
        const searchInput = document.getElementById('searchInput');
        const sortSelect = document.getElementById('sortSelect');
        const loadingOverlay = document.querySelector('.loading-overlay');
        let searchTimeout;

        document.querySelectorAll('.subcategory-filter').forEach(filter => {
            filter.addEventListener('change', () => performSearch(1));
        });

        document.querySelectorAll('.size-filter').forEach(filter => {
            filter.addEventListener('change', () => performSearch(1));
        });

        document.querySelectorAll('.color-filter').forEach(filter => {
            filter.addEventListener('change', () => performSearch(1));
        });
        // Function to show/hide loading state
        function showLoading() {
            if (loadingOverlay) loadingOverlay.style.display = 'flex';
        }

        function hideLoading() {
            if (loadingOverlay) loadingOverlay.style.display = 'none';
        }

        // Function to format price
        function formatPrice(price) {
            return `₹${parseFloat(price).toFixed(2)}`;
        }

        // Function to get current filter values
        function getCurrentFilters() {
            return {
                query: searchInput?.value.trim() || '',
                sort: sortSelect?.value || 'newest',
                maxPrice: document.getElementById('priceRange')?.value,
                sizes: Array.from(document.querySelectorAll('.size-filter:checked'))
                    .map(cb => cb.value).join(','),
                colors: Array.from(document.querySelectorAll('.color-filter:checked'))
                    .map(cb => cb.value).join(','),
                subcategories: Array.from(document.querySelectorAll('.subcategory-filter:checked'))
                    .map(cb => cb.value).join(',')
            };
        }


        // Function to update URL parameters
        function updateURLParameters(params) {
            const url = new URL(window.location.href);
            Object.keys(params).forEach(key => {
                if (params[key]) {
                    url.searchParams.set(key, params[key]);
                } else {
                    url.searchParams.delete(key);
                }
            });
            window.history.pushState({}, '', url);
        }

        // Function to generate pagination HTML
        function generatePagination(pagination) {
            if (!pagination || pagination.totalPages <= 1) return '';

            let html = '<nav aria-label="Product navigation" class="mt-4">';
            html += '<ul class="pagination justify-content-center">';

            // Previous button
            if (pagination.hasPreviousPage) {
                html += `<li class="page-item">
                    <a class="page-link" href="#" data-page="${pagination.currentPage - 1}">
                        <i class="bi bi-chevron-left"></i>
                    </a>
                </li>`;
            }

            // Page numbers
            for (let i = 1; i <= pagination.totalPages; i++) {
                html += `<li class="page-item ${pagination.currentPage === i ? 'active' : ''}">
                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                </li>`;
            }

            // Next button
            if (pagination.hasNextPage) {
                html += `<li class="page-item">
                    <a class="page-link" href="#" data-page="${pagination.currentPage + 1}">
                        <i class="bi bi-chevron-right"></i>
                    </a>
                </li>`;
            }

            html += '</ul></nav>';
            return html;
        }

        // Function to perform search with all filters
        async function performSearch(page = 1) {
            try {
                const currentPath = window.location.pathname;
                const category = currentPath.includes('/women') ? 'Women' : 'Men';

                // Get all current filter values
                const currentFilters = getCurrentFilters();

                // Build search parameters
                const searchParams = new URLSearchParams({
            ...currentFilters,
            category: category,
            page: page.toString()
        });


                const response = await fetch(`/search?${searchParams.toString()}`, {
                    headers: {
                        'Accept': 'application/json'
                    },
                    credentials: 'same-origin'
                });

                if (!response.ok) {
                    if (response.status === 401) {
                        window.location.href = '/login';
                        return;
                    }
                    throw new Error('Search failed');
                }

                const data = await response.json();

                if (data.success) {
                    // Update URL parameters
                    updateURLParameters({
                        ...currentFilters,
                        page: page.toString()
                    });

                    // Update grid
                    if (productsWrapper) {
                        if (data.products.length === 0) {
                            productsWrapper.innerHTML = `
                                <div class="no-products">
                                    <i class="bi bi-search"></i>
                                    <h3>No Products Found</h3>
                                    <p class="text-muted">Try adjusting your search criteria</p>
                                    <button class="btn btn-primary mt-3" onclick="clearAllFilters()">
                                        Clear All Filters
                                    </button>
                                </div>`;
                        } else {
                            const productsHTML = data.products.map(product => `
                                <div class="col-6 col-md-4 col-lg-4">
                                    <div class="product-card">
                                        <div class="product-image-wrapper">
                                            <button class="wishlist-btn" 
                                                    onclick="toggleWishlist('${product._id}')"
                                                    data-wishlist-id="${product._id}"
                                                    title="${product.isInWishlist ? 'Remove from Wishlist' : 'Add to Wishlist'}">
                                                <i class="${product.isInWishlist ? 'fa-solid' : 'fa-regular'} fa-heart"></i>
                                            </button>
                                            <a href="/productDetails/${product._id}">
                                                <img src="${product.image}" 
                                                     class="product-image" 
                                                     alt="${product.productName}">
                                            </a>
                                            <div class="product-badges">
                                                ${product.discountPercentage > 0 ? `
                                                    <span class="badge sale-badge">
                                                        ${product.discountPercentage}% OFF
                                                    </span>
                                                ` : ''}
                                            </div>
                                        </div>
                                        <div class="product-info">
                                            <a href="/productDetails/${product._id}" class="text-decoration-none">
                                                <h3 class="product-title">${product.productName}</h3>
                                            </a>
                                            <div class="price-container">
                                                ${product.hasOffer ? `
                                                    <span class="original-price">${formatPrice(product.originalPrice)}</span>
                                                    <span class="current-price">${formatPrice(product.finalPrice)}</span>
                                                    ${product.discountPercentage > 0 ? `
                                                        <span class="discount-badge">
                                                            ${product.discountPercentage}% OFF
                                                        </span>
                                                    ` : ''}
                                                ` : `
                                                    <span class="current-price">${formatPrice(product.originalPrice)}</span>
                                                `}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            `).join('');

                            productsWrapper.innerHTML = `
                                <div class="row g-4">
                                    ${productsHTML}
                                </div>
                                ${generatePagination(data.pagination)}
                            `;
                        }
                    }
                }
            } catch (error) {
                console.error('Search error:', error);
                Swal.fire({
                    text: 'An error occurred while searching',
                    icon: 'error',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            } finally {
                hideLoading();
            }
        }

        // Event Listeners
        if (searchInput) {
            searchInput.addEventListener('input', function() {
                if (searchTimeout) {
                    clearTimeout(searchTimeout);
                }
                searchTimeout = setTimeout(() => performSearch(1), 300);
            });
        }

        if (sortSelect) {
            sortSelect.addEventListener('change', function() {
                performSearch(1);
            });
        }

        // Handle other filters
        document.querySelectorAll('.size-filter').forEach(filter => {
            filter.addEventListener('change', () => performSearch(1));
        });

        document.querySelectorAll('.color-filter').forEach(filter => {
            filter.addEventListener('click', function() {
                this.classList.toggle('selected');
                performSearch(1);
            });
        });

        if (document.getElementById('priceRange')) {
            let priceUpdateTimeout;
            document.getElementById('priceRange').addEventListener('input', function() {
                document.getElementById('priceValue').textContent = this.value;
                clearTimeout(priceUpdateTimeout);
                priceUpdateTimeout = setTimeout(() => performSearch(1), 500);
            });
        }

        // Handle pagination clicks
        document.addEventListener('click', function(e) {
            const pageLink = e.target.closest('.page-link');
            if (pageLink) {
                e.preventDefault();
                const page = pageLink.getAttribute('data-page');
                if (page) {
                    performSearch(parseInt(page));
                }
            }
        });

        // Clear all filters
        document.getElementById('clearFilters')?.addEventListener('click', function() {
            if (searchInput) searchInput.value = '';
            if (sortSelect) sortSelect.value = 'newest';
            document.querySelectorAll('.size-filter').forEach(el => el.checked = false);
            document.querySelectorAll('.color-filter').forEach(el => el.checked = false);            if (document.getElementById('priceRange')) {
                const maxPrice = document.getElementById('priceRange').getAttribute('max');
                document.getElementById('priceRange').value = maxPrice;
                document.getElementById('priceValue').textContent = maxPrice;
                
            }

            document.querySelectorAll('.subcategory-filter').forEach(el => el.checked = false);
            performSearch(1);
        });
    });

    async function toggleWishlist(productId) {
            try {
                const response = await fetch('/toggleWishlist', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ productId })
                });
                
                const data = await response.json();
                
                if (data.success) {
                    const wishlistBtn = document.querySelector(`[data-wishlist-id="${productId}"]`);
                    const icon = wishlistBtn.querySelector('i');
                    const textSpan = wishlistBtn.querySelector('.wishlist-text');
                    
                    if (data.isInWishlist) {
                        icon.classList.remove('fa-regular');
                        icon.classList.add('fa-solid');
                        textSpan.textContent = 'Wishlisted';
                        wishlistBtn.classList.add('wishlisted');
                        showToast('Added to wishlist!', 'success');
                    } else {
                        icon.classList.remove('fa-solid');
                        icon.classList.add('fa-regular');
                        textSpan.textContent = 'Add to Wishlist';
                        wishlistBtn.classList.remove('wishlisted');
                        showToast('Removed from wishlist!', 'info');
                    }
                    
                    if (data.wishlistCount !== undefined && document.getElementById('wishlistCount')) {
                        document.getElementById('wishlistCount').textContent = data.wishlistCount;
                    }
                } else {
                    if (response.status === 401) {
                        Swal.fire({
                            title: 'Login Required',
                            text: 'Please login to add items to your wishlist',
                            icon: 'info',
                            showCancelButton: true,
                            confirmButtonText: 'Login',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                window.location.href = '/login';
                            }
                        });
                    } else {
                        throw new Error(data.message || 'Failed to update wishlist');
                    }
                }
            } catch (error) {
                console.error('Wishlist error:', error);
                showToast('Something went wrong. Please try again.', 'error');
            }
        }
</script>
</body>
</html>