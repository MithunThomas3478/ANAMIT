<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>My Account - Anamit</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f5f5f5;
            min-height: 100vh;
        }

        /* Main Content Styles */
        .container {
            max-width: 1600px; /* Increased from 1200px */
            margin: 3rem auto; /* Increased from 2rem */
            padding: 0 3rem; /* Increased from 1rem */
            width: 90%; /* Added to ensure consistent width */
        }

        .page-title {
            text-align: center;
            margin-bottom: 3rem; /* Increased from 2rem */
            font-size: 32px; /* Increased from 24px */
            color: #333;
            font-weight: bold;
        }

        .profile-container {
            display: grid;
            grid-template-columns: 300px 1fr; /* Increased sidebar width from 250px */
            gap: 3rem; /* Increased from 2rem */
            min-height: 600px; /* Added minimum height */
        }

        /* Sidebar Styles */
        .sidebar {
            background: white;
            border-radius: 12px; /* Increased from 8px */
            padding: 3rem 2rem; /* Increased padding */
            height: fit-content;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .profile-avatar {
            width: 120px; /* Increased from 100px */
            height: 120px; /* Increased from 100px */
            background: #f0f0f0;
            border-radius: 50%;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-avatar i {
            font-size: 48px; /* Increased from 40px */
            color: #999;
        }

        .edit-text {
            text-align: center;
            margin-bottom: 3rem; /* Increased from 2rem */
            color: #333;
            font-size: 18px; /* Added font size */
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 1rem 1.5rem; /* Increased padding */
            margin: 0.75rem 0; /* Increased margin */
            cursor: pointer;
            border-radius: 8px; /* Increased from 4px */
            color: #333;
            text-decoration: none;
            transition: all 0.3s;
            font-size: 16px; /* Added font size */
        }

        .menu-item:hover {
            background-color: #f5f5f5;
            transform: translateX(5px);
        }

        .menu-item i {
            margin-right: 1rem; /* Increased from 0.75rem */
            width: 24px; /* Increased from 20px */
            font-size: 18px; /* Added font size */
        }

        .logout-btn {
            background: #ff8800;
            color: white;
            border: none;
            padding: 1.25rem; /* Increased from 1rem */
            width: 100%;
            border-radius: 8px; /* Increased from 4px */
            cursor: pointer;
            margin-top: 3rem; /* Increased from 2rem */
            font-weight: bold;
            font-size: 16px; /* Added font size */
            transition: background-color 0.3s;
        }

        .logout-btn:hover {
            background: #ff7700;
        }

        /* Form Styles */
        .profile-form {
            background: white;
            padding: 3rem; /* Increased from 2rem */
            border-radius: 12px; /* Increased from 8px */
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            height: fit-content;
        }

        .form-title {
            font-size: 24px; /* Increased from 20px */
            color: #333;
            margin-bottom: 3rem; /* Increased from 2rem */
            font-weight: bold;
        }

        .form-group {
            margin-bottom: 2rem; /* Increased from 1.5rem */
        }

        .form-group label {
            display: block;
            margin-bottom: 0.75rem; /* Increased from 0.5rem */
            color: #333;
            font-size: 16px; /* Added font size */
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 1rem; /* Increased from 0.75rem */
            border: 1px solid #ddd;
            border-radius: 8px; /* Increased from 4px */
            background: #f5f5f5;
            font-size: 16px; /* Added font size */
            transition: border-color 0.3s;
        }

        .form-group input:focus {
            outline: none;
            border-color: #ff8800;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1.5rem; /* Increased from 1rem */
            margin-top: 3rem; /* Increased from 2rem */
        }

        .btn {
            padding: 1rem 2rem; /* Increased padding */
            border-radius: 8px; /* Increased from 4px */
            cursor: pointer;
            font-weight: 500;
            font-size: 16px; /* Added font size */
            transition: all 0.3s;
        }

        .btn:hover {
            transform: translateY(-2px);
        }

        .btn-cancel {
            background: #eee;
            border: none;
            color: #333;
        }

        .btn-cancel:hover {
            background: #e0e0e0;
        }

        .btn-save {
            background: #ff8800;
            border: none;
            color: white;
        }

        .btn-save:hover {
            background: #ff7700;
        }
        .error-message {
            color: #dc3545;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .form-group input.error {
            border-color: #dc3545;
            background-color: #fff;
        }

        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 2rem;
            font-size: 16px;
        }

        .alert-danger {
            background-color: #ffe6e6;
            color: #dc3545;
            border: 1px solid #ffcccc;
        }

        .alert-success {
            background-color: #e6ffe6;
            color: #28a745;
            border: 1px solid #ccffcc;
        }

        @media (max-width: 1200px) {
            .container {
                width: 95%;
                padding: 0 2rem;
            }
        }

        @media (max-width: 768px) {
            .profile-container {
                grid-template-columns: 1fr;
                gap: 2rem;
            }
            
            .container {
                padding: 0 1rem;
            }

            .profile-form {
                padding: 2rem;
            }
        }
    </style>
</head>
<body>
    <!-- Main Content -->
    <div class="container">
        <h1 class="page-title">MY ACCOUNT</h1>
        
        <div class="profile-container">
            <!-- Sidebar -->
            <div class="sidebar">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
           
                
                <a href="/userProfile" class="menu-item">
                    <i class="fas fa-user"></i>
                    Account Overview
                </a>
                <a href="/orders" class="menu-item">
                    <i class="fas fa-box"></i>
                    My Orders
                </a>
                <a href="userAddress" class="menu-item">
                    <i class="fas fa-map-marker-alt"></i>
                    Manage Address
                </a>
                <a href="/wallet" class="menu-item">
                    <i class="fas fa-wallet"></i>
                    Wallet
                </a>
                <a href="passwordMangement" class="menu-item">
                    <i class="fas fa-lock"></i>
                    Manage Password
                </a>
                <a href="/wishlist" class="menu-item">
                    <i class="fas fa-heart"></i>
                    Wishlist
                </a>
                
                <a href="/logout"><button class="logout-btn">LOG OUT</button></a> 
            </div>

            <!-- Profile Form -->
            <div class="profile-form">
                <h2 class="form-title">Edit your Profile</h2>
                
                <% if (messages && messages.error) { %>
                    <div class="alert alert-danger">
                        <%= messages.error %>
                    </div>
                <% } %>
                
                <% if (messages && messages.success) { %>
                    <div class="alert alert-success">
                        <%= messages.success %>
                    </div>
                <% } %>
        
                <form action="/editProfile/update" method="POST" id="profileForm" novalidate>
                    <div class="form-group">
                        <label for="name">Full Name</label>
                        <input 
                            type="text" 
                            id="name" 
                            name="name" 
                            placeholder="Enter your full name"
                            value="<%= user.name %>"
                            pattern="^[A-Za-z\s]{3,50}$"
                            required
                        >
                        <span class="error-message" id="nameError"></span>
                    </div>
                    
                    <div class="form-group">
                        <label for="email">Email</label>
                        <input 
                            type="email" 
                            id="email" 
                            name="email" 
                            value="<%= user.email %>"
                            readonly
                            style="background-color: #f0f0f0; cursor: not-allowed;"
                        >
                        <span class="error-message" id="emailError"></span>
                    </div>
                    
                    <div class="form-group">
                        <label for="phone">Phone Number</label>
                        <input 
                            type="tel" 
                            id="phone" 
                            name="phone" 
                            placeholder="Enter your phone number"
                            value="<%= user.phone || '' %>"
                            pattern="^[0-9]{10}$"
                            required
                        >
                        <span class="error-message" id="phoneError"></span>
                    </div>
                    
                    <div id="formMessage" class="alert" style="display: none;"></div>
                    <div class="form-actions">
                        <a href="/userProfile" class="btn btn-cancel">Cancel</a>
                        <button type="submit" class="btn btn-save">Save Changes</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Update the form validation to only validate name and phone
const form = document.getElementById('profileForm');
const nameInput = document.getElementById('name');
const phoneInput = document.getElementById('phone');
const formMessage = document.getElementById('formMessage');

// Show message function
function showMessage(type, message) {
    formMessage.textContent = message;
    formMessage.className = `alert alert-${type}`;
    formMessage.style.display = 'block';
    
    // Auto hide after 5 seconds
    setTimeout(() => {
        formMessage.style.display = 'none';
    }, 5000);
}

// Only proceed if we're on the edit profile page (form exists)
if (form) {
    // Validation messages
    const errorMessages = {
        name: {
            required: 'Name is required',
            pattern: 'Name should contain only letters and spaces, between 3-50 characters'
        },
        phone: {
            required: 'Phone number is required',
            pattern: 'Please enter a valid 10-digit phone number'
        }
    };

    // Show error message
    function showError(input, message) {
        const errorElement = document.getElementById(input.id + 'Error');
        if (errorElement) {
            errorElement.textContent = message;
            errorElement.style.display = 'block';
            input.classList.add('error');
        }
    }

    // Hide error message
    function hideError(input) {
        const errorElement = document.getElementById(input.id + 'Error');
        if (errorElement) {
            errorElement.style.display = 'none';
            input.classList.remove('error');
        }
    }

    // Validate single input
    function validateInput(input) {
        if (input.hasAttribute('readonly')) return true;

        if (input.required && !input.value.trim()) {
            showError(input, errorMessages[input.id].required);
            return false;
        }

        if (input.pattern && input.value.trim()) {
            const regex = new RegExp(input.pattern);
            if (!regex.test(input.value.trim())) {
                showError(input, errorMessages[input.id].pattern);
                return false;
            }
        }

        hideError(input);
        return true;
    }

    // Add input event listeners
    [nameInput, phoneInput].forEach(input => {
        if (input) {
            input.addEventListener('input', () => {
                validateInput(input);
            });

            input.addEventListener('blur', () => {
                validateInput(input);
            });
        }
    });

    // Form submission
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        let isValid = true;

        // Validate only name and phone fields
        [nameInput, phoneInput].forEach(input => {
            if (!validateInput(input)) {
                isValid = false;
            }
        });

        if (isValid) {
            try {
                const formData = new FormData(form);
                const response = await fetch('/editProfile/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        name: formData.get('name'),
                        phone: formData.get('phone')
                    })
                });

                const data = await response.json();
                
                if (data.success) {
                    showMessage('success', data.message);
                    // Redirect after successful update
                    setTimeout(() => {
                        window.location.href = '/userProfile';
                    }, 2000);
                } else {
                    showMessage('danger', data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                showMessage('danger', 'An error occurred while updating your profile');
            }
        }
    });
}

// Navigation event listeners
document.querySelectorAll('.menu-item').forEach(item => {
    item.addEventListener('click', (e) => {
        const href = item.getAttribute('href');
        if (href) {
            window.location.href = href;
        }
    });
});

// Logout functionality
const logoutBtn = document.querySelector('.logout-btn');
if (logoutBtn) {
    logoutBtn.addEventListener('click', () => {
        window.location.href = '/logout';
    });
}
    </script>
</body>
</html>