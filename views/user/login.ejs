<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ANAMIT - Login</title>
    
    <!-- External CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" />
    
    <style>
        /* Base Styles */
        body, html {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
            height: 100%;
            text-decoration: none;
            overflow-x: hidden;
        }

        /* Layout Styles */
        .container {
            display: flex;
            min-height: 100vh;
            width: 100%;
            padding: 0;
            margin: 0;
            max-width: none;
        }

        /* Image Section Styles */
        .left {
            width: 50%;
            position: relative;
            overflow: hidden;
        }

        .left::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('/images/pexels-jeiteerei-2221879.jpg');
            background-size: cover;
            background-position: center;
            background-repeat: no-repeat;
        }

        /* Form Section Styles */
        .right {
            width: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #ffffff;
            padding: 2rem;
        }

        /* Card Styles */
        .card {
            width: 100%;
            max-width: 400px;
            padding: 2rem;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
            border: 1px solid #ddd;
            margin: auto;
        }

        .card-header {
            text-align: center;
            margin-bottom: 1.5rem;
            border-bottom: none;
            background-color: transparent;
            padding: 0;
        }

        .card-header h1 {
            color: #333;
            font-size: 1.5rem;
            margin: 0;
        }

        /* Form Element Styles */
        .form-group {
            margin-bottom: 1.5rem;
            position: relative;
        }

        label {
            display: block;
            margin-bottom: 0.5rem;
            color: #666;
            font-weight: 500;
        }

        .form-control {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 1rem;
            transition: border-color 0.3s ease;
        }

        .form-control:focus {
            border-color: #ff9000;
            box-shadow: 0 0 0 0.2rem rgba(255, 144, 0, 0.25);
            outline: none;
        }

        .form-control.is-invalid {
            border-color: #dc3545;
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='%23dc3545' viewBox='0 0 12 12'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");
            background-repeat: no-repeat;
            background-position: right calc(0.375em + 0.1875rem) center;
            background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem);
            padding-right: calc(1.5em + 0.75rem);
        }

        .invalid-feedback {
            display: none;
            width: 100%;
            margin-top: 0.25rem;
            font-size: 80%;
            color: #dc3545;
        }

        /* Button Styles */
        .btn {
            width: 100%;
            padding: 0.75rem;
            background-color: #ff9000;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 1rem;
            transition: all 0.3s ease;
            position: relative;
        }

        .btn:hover {
            background-color: #fe5000;
            transform: translateY(-1px);
        }

        .btn:active {
            transform: translateY(0);
        }

        .btn-outline {
            margin-top: 1rem;
            background-color: #fff;
            color: #666;
            border: 1px solid #ddd;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
        }

        .btn-outline:hover {
            background-color: #f5f5f5;
            color: #333;
        }

        /* Link Styles */
        .links {
            display: flex;
            justify-content: space-between;
            margin-top: 1.5rem;
            padding-top: 1rem;
            border-top: 1px solid #eee;
        }

        .links a {
            color: #0059fe;
            text-decoration: none;
            font-size: 0.9rem;
            transition: color 0.3s ease;
        }

        .links a:hover {
            color: #0042cb;
            text-decoration: underline;
        }

        /* Alert Styles */
        .alert {
            padding: 1rem;
            border-radius: 4px;
            margin-bottom: 1.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .alert-danger {
            background-color: #fff2f0;
            color: #721c24;
            border: 1px solid #ffccc7;
        }

        .alert-success {
            background-color: #f6ffed;
            color: #135200;
            border: 1px solid #b7eb8f;
        }
        .blocked-alert {
            background-color: #ffeaea;
            border: 2px solid #ff4d4f;
            padding: 1rem;
            margin-bottom: 1.5rem;
        }

        .blocked-alert .alert-content {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .blocked-alert strong {
            color: #cf1322;
            font-size: 1.1em;
        }

        .alert-content div {
            color: #595959;
        }
        /* Loading State */
        .btn-loading {
            position: relative;
            pointer-events: none;
            opacity: 0.8;
        }

        .btn-loading::after {
            content: "";
            position: absolute;
            width: 16px;
            height: 16px;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            margin: auto;
            border: 2px solid transparent;
            border-top-color: #ffffff;
            border-radius: 50%;
            animation: spin 1s ease infinite;
        }
        .password-input-group {
            position: relative;
            display: flex;
            align-items: center;
        }

        .password-toggle-btn {
            position: absolute;
            right: 10px;
            top: 50%;
            transform: translateY(-50%);
            background: none;
            border: none;
            padding: 0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .password-toggle-btn:focus {
            outline: none;
        }

        .password-toggle-btn .eye-icon {
            color: #666;
            transition: color 0.3s ease;
        }

        .password-toggle-btn:hover .eye-icon {
            color: #333;
        }

        .password-input-group .form-control {
            padding-right: 40px;
        }
        @keyframes spin {
            to {
                transform: rotate(360deg);
            }
        }

        /* Responsive Styles */
        @media (max-width: 768px) {
            .container {
                flex-direction: column;
            }
            .left {
                display: none;
            }
            .right {
                width: 100%;
                padding: 1rem;
            }
            .card {
                margin: 0 auto;
                padding: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Image Section -->
        <div class="left"></div>

        <!-- Form Section -->
        <div class="right">
            <div class="card">
                <div class="card-header">
                    <h1>ANAMIT - Login your Account</h1>
                </div>
                
                <div class="card-content">
                    <!-- Error Message Section -->
                    <% if (locals.message) { %>
                        <div id="alertMessage" class="alert alert-danger <%= locals.isBlocked ? 'blocked-alert' : '' %>" role="alert">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                                <circle cx="12" cy="12" r="10"></circle>
                                <line x1="12" y1="8" x2="12" y2="12"></line>
                                <line x1="12" y1="16" x2="12.01" y2="16"></line>
                            </svg>
                            <div class="alert-content">
                                <% if (locals.isBlocked) { %>
                                    <strong>Account Blocked</strong>
                                <% } %>
                                <div><%= message %></div>
                            </div>
                        </div>
                    <% } %>

                    <!-- Login Form -->
                    <form id="loginForm" method="POST" action="/login" novalidate>
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" class="form-control" id="email" name="email" 
                                   placeholder="Enter your email" required />
                            <div class="invalid-feedback">
                                Please enter a valid email address.
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="password">Password</label>
                            <div class="password-input-group">
                                <input type="password" class="form-control" id="password" name="password" 
                                       placeholder="Enter your password" required minlength="6" />
                                <button type="button" class="password-toggle-btn" id="togglePassword">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="eye-icon">
                                        <path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path>
                                        <circle cx="12" cy="12" r="3"></circle>
                                    </svg>
                                </button>
                            </div>
                            <div class="invalid-feedback">
                                Password must be at least 6 characters long.
                            </div>
                        </div>
                        <div class="d-grid">
                            <button type="submit" class="btn" id="loginButton">
                                Log In
                            </button>
                        </div>
                    </form>

                    <!-- Google Sign-up Button -->
                    <button class="btn btn-outline" onclick="window.location.href='/auth/google'">
                        <img src="https://developers.google.com/identity/images/g-logo.png" 
                             alt="Google logo" width="20" height="20" />
                        <span>Sign up with Google</span>
                    </button>
                    

                    <!-- Additional Links -->
                    <div class="links">
                        <a href="/forgotPassword">Forgot password?</a>
                        <a href="/signup">Sign up</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const form = document.getElementById('loginForm');
            const emailInput = document.getElementById('email');
            const passwordInput = document.getElementById('password');
            const loginButton = document.getElementById('loginButton');
            const alertMessage = document.getElementById('alertMessage');
            // In your existing DOMContentLoaded event listener
            if (alertMessage) {
                // Don't auto-hide blocked user messages
                if (!alertMessage.classList.contains('blocked-alert')) {
                    setTimeout(function() {
                        alertMessage.style.opacity = '0';
                        alertMessage.style.transition = 'opacity 0.5s ease';
                        setTimeout(() => alertMessage.style.display = 'none', 500);
                    }, 5000);
                }
            }
            const togglePassword = document.getElementById('togglePassword');

            // Function to validate email
            function isValidEmail(email) {
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                return emailRegex.test(email);
            }

            // Function to show error
            function showError(input, message) {
                input.classList.add('is-invalid');
                const feedbackElement = input.nextElementSibling;
                if (feedbackElement && feedbackElement.classList.contains('invalid-feedback')) {
                    feedbackElement.textContent = message;
                    feedbackElement.style.display = 'block';
                }
            }

            // Function to hide error
            function hideError(input) {
                input.classList.remove('is-invalid');
                const feedbackElement = input.nextElementSibling;
                if (feedbackElement && feedbackElement.classList.contains('invalid-feedback')) {
                    feedbackElement.style.display = 'none';
                }
            }

            // Handle input validation on change
            emailInput.addEventListener('input', function() {
                if (this.value.trim() === '') {
                    showError(this, 'Email is required');
                } else if (!isValidEmail(this.value)) {
                    showError(this, 'Please enter a valid email address');
                } else {
                    hideError(this);
                }
            });

            passwordInput.addEventListener('input', function() {
                if (this.value.trim() === '') {
                    showError(this, 'Password is required');
                } else if (this.value.length < 6) {
                    showError(this, 'Password must be at least 6 characters long');
                } else {
                    hideError(this);
                }
            });

            // Handle form submission
            form.addEventListener('submit', function(e) {
                e.preventDefault();
                let isValid = true;

                // Validate email
                if (emailInput.value.trim() === '') {
                    showError(emailInput, 'Email is required');
                    isValid = false;
                } else if (!isValidEmail(emailInput.value)) {
                    showError(emailInput, 'Please enter a valid email address');
                    isValid = false;
                }

                // Validate password
                if (passwordInput.value.trim() === '') {
                    showError(passwordInput, 'Password is required');
                    isValid = false;
                } else if (passwordInput.value.length < 6) {
                    showError(passwordInput, 'Password must be at least 6 characters long');
                    isValid = false;
                }

                if (isValid) {
                    // Show loading state
                    loginButton.classList.add('btn-loading');
                    loginButton.textContent = '';

                    // Submit the form
                    this.submit();
                }
            });

            togglePassword.addEventListener('click', function() {
            // Toggle the password visibility
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            
            // Toggle the eye icon
            const eyeIcon = this.querySelector('.eye-icon');
            if (type === 'password') {
                eyeIcon.innerHTML = '<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>';
            } else {
                eyeIcon.innerHTML = '<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>';
            }
        });

            // Hide alert message after 5 seconds
            if (alertMessage) {
                setTimeout(function() {
                    alertMessage.style.opacity = '0';
                    alertMessage.style.transition = 'opacity 0.5s ease';
                    setTimeout(() => alertMessage.style.display = 'none', 500);
                }, 5000);
            }
        });
    </script>
</body>
</html>