<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Password</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        body {
            background-color: #f5f5f5;
            min-height: 100vh;
        }

        .container {
            max-width: 1600px;
            margin: 3rem auto;
            padding: 0 3rem;
            width: 90%;
        }

        .profile-container {
            display: grid;
            grid-template-columns: 300px 1fr;
            gap: 3rem;
        }

        /* Sidebar Styles */
        .sidebar {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            height: fit-content;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .profile-avatar {
            width: 120px;
            height: 120px;
            background: #f0f0f0;
            border-radius: 50%;
            margin: 0 auto 1.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .profile-avatar i {
            font-size: 48px;
            color: #999;
        }

        .menu-item {
            display: flex;
            align-items: center;
            padding: 1rem;
            margin: 0.5rem 0;
            cursor: pointer;
            border-radius: 8px;
            color: #333;
            text-decoration: none;
            transition: background-color 0.3s;
        }

        .menu-item.active {
            background: #e0e0e0;
        }

        .menu-item i {
            margin-right: 1rem;
            width: 20px;
        }

        .logout-btn {
            background: #ff8800;
            color: white;
            border: none;
            padding: 1rem;
            width: 100%;
            border-radius: 8px;
            cursor: pointer;
            margin-top: 2rem;
            font-weight: bold;
        }

        /* Password Content Styles */
        .content {
            background: white;
            border-radius: 12px;
            padding: 2rem;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }

        .section-title {
            font-size: 24px;
            margin-bottom: 2rem;
            color: #333;
            font-weight: bold;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            color: #333;
            font-weight: 500;
        }

        .form-group input {
            width: 100%;
            padding: 0.75rem;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-size: 16px;
        }

        .form-group input:focus {
            outline: none;
            border-color: #ff8800;
        }

        .password-wrapper {
            position: relative;
        }

        .toggle-password {
            position: absolute;
            right: 1rem;
            top: 50%;
            transform: translateY(-50%);
            cursor: pointer;
            color: #666;
        }

        .password-requirements {
            background: #f8f9fa;
            padding: 1.5rem;
            border-radius: 8px;
            margin: 1.5rem 0;
        }

        .requirement-title {
            font-weight: 500;
            margin-bottom: 1rem;
            color: #333;
        }

        .requirements-list {
            list-style: none;
        }

        .requirement-item {
            display: flex;
            align-items: center;
            margin-bottom: 0.5rem;
            color: #666;
        }

        .requirement-item i {
            margin-right: 0.5rem;
            font-size: 14px;
        }

        .requirement-item.valid {
            color: #28a745;
        }

        .requirement-item.invalid {
            color: #dc3545;
        }

        .form-actions {
            display: flex;
            justify-content: flex-end;
            gap: 1rem;
            margin-top: 2rem;
        }

        .btn {
            padding: 1rem 2rem;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 500;
            transition: all 0.3s;
            border: none;
        }

        .btn-cancel {
            background: #080808 !important;
            color: #ffffff !important;
        }
        .btn-save {
            background: #ff8800 !important;
            color: white !important;
        }


        .btn:hover {
            transform: translateY(-2px);
        }

        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            display: none;
        }

        .alert-success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
        .alert {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1.5rem;
            font-size: 1rem;
            line-height: 1.5;
        }

        .alert-error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
            display: flex;
            align-items: center;
        }

        /* Special styling for Google auth message */
        .alert-error.google-auth {
            background-color: #fff3cd;
            color: #856404;
            border-color: #ffeeba;
            padding: 1.25rem;
            margin: 2rem 0;
            display: flex;
            align-items: center;
        }

        .alert i {
            margin-right: 10px;
            font-size: 1.1em;
        }

        @media (max-width: 768px) {
            .profile-container {
                grid-template-columns: 1fr;
            }

            .container {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <%- include('../partials/user/header')%>
    <div class="container" style="padding-top: 150px;">
        <div class="profile-container">
            <!-- Sidebar -->
            <div class="sidebar">
                <div class="profile-avatar">
                    <i class="fas fa-user"></i>
                </div>
                
                <a href="userProfile" class="menu-item">
                    <i class="fas fa-user"></i>
                    Account Overview
                </a>
                <a href="#" class="menu-item">
                    <i class="fas fa-box"></i>
                    My Orders
                </a>
                <a href="UserAddress" class="menu-item">
                    <i class="fas fa-map-marker-alt"></i>
                    Manage Address
                </a>
                <a href="#" class="menu-item">
                    <i class="fas fa-wallet"></i>
                    Wallet
                </a>
                <a href="#" class="menu-item active">
                    <i class="fas fa-lock"></i>
                    Manage Password
                </a>
                <a href="#" class="menu-item">
                    <i class="fas fa-heart"></i>
                    Wishlist
                </a>
                
               <a href="logout"><button class="logout-btn">LOG OUT</button></a> 
            </div>

            <!-- Main Content -->
            <div class="content">
                <h1 class="section-title">Change Password</h1>
    
                <% if (messages.success) { %>
                    <div class="alert alert-success">
                        <%= messages.success %>
                    </div>
                <% } %>
    
                <% if (messages.error) { %>
                    <div class="alert alert-error">
                        <%= messages.error %>
                    </div>
                <% } %>
    
                <% if (user.authProvider === 'google') { %>
                    <div class="alert alert-error" style="display: block; margin-bottom: 2rem;">
                        <i class="fas fa-exclamation-circle" style="margin-right: 8px;"></i>
                        Password change is not available for Google-authenticated accounts. You are currently signed in using Google authentication.
                    </div>
                <% } else { %>
                    <form id="passwordForm" action="/changePassword" method="POST">
                        <div class="form-group">
                            <label for="currentPassword">Current Password</label>
                            <div class="password-wrapper">
                                <input type="password" id="currentPassword" name="currentPassword" required>
                                <i class="fas fa-eye toggle-password" onclick="togglePasswordVisibility('currentPassword')"></i>
                            </div>
                        </div>
    
                        <div class="form-group">
                            <label for="newPassword">New Password</label>
                            <div class="password-wrapper">
                                <input type="password" id="newPassword" name="newPassword" required onkeyup="checkPasswordStrength()">
                                <i class="fas fa-eye toggle-password" onclick="togglePasswordVisibility('newPassword')"></i>
                            </div>
                        </div>
    
                        <div class="form-group">
                            <label for="confirmPassword">Confirm New Password</label>
                            <div class="password-wrapper">
                                <input type="password" id="confirmPassword" name="confirmPassword" required onkeyup="checkPasswordMatch()">
                                <i class="fas fa-eye toggle-password" onclick="togglePasswordVisibility('confirmPassword')"></i>
                            </div>
                        </div>
    
                        <div class="password-requirements">
                            <div class="requirement-title">Password Requirements:</div>
                            <ul class="requirements-list">
                                <li class="requirement-item" id="length">
                                    <i class="fas fa-times-circle"></i>
                                    At least 8 characters
                                </li>
                                <li class="requirement-item" id="uppercase">
                                    <i class="fas fa-times-circle"></i>
                                    One uppercase letter
                                </li>
                                <li class="requirement-item" id="lowercase">
                                    <i class="fas fa-times-circle"></i>
                                    One lowercase letter
                                </li>
                                <li class="requirement-item" id="number">
                                    <i class="fas fa-times-circle"></i>
                                    One number
                                </li>
                                <li class="requirement-item" id="match">
                                    <i class="fas fa-times-circle"></i>
                                    Passwords match
                                </li>
                            </ul>
                        </div>
    
                        <div class="form-actions">
                            <button type="button" class="btn btn-cancel" onclick="resetForm()">Cancel</button>
                            <button type="submit" class="btn btn-save">Update Password</button>
                        </div>
                    </form>
                <% } %>
            </div>
        </div>
    </div>
    <%- include('../partials/user/footer')%>
    <!-- Add this in the head section of your template -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        function togglePasswordVisibility(inputId) {
            const input = document.getElementById(inputId);
            const icon = input.nextElementSibling;
            
            if (input.type === 'password') {
                input.type = 'text';
                icon.classList.remove('fa-eye');
                icon.classList.add('fa-eye-slash');
            } else {
                input.type = 'password';
                icon.classList.remove('fa-eye-slash');
                icon.classList.add('fa-eye');
            }
        }

        function checkPasswordStrength() {
            const password = document.getElementById('newPassword').value;
            
            // Update requirements
            document.getElementById('length').classList.toggle('valid', password.length >= 8);
            document.getElementById('uppercase').classList.toggle('valid', /[A-Z]/.test(password));
            document.getElementById('lowercase').classList.toggle('valid', /[a-z]/.test(password));
            document.getElementById('number').classList.toggle('valid', /[0-9]/.test(password));
            
            // Update icons
            document.querySelectorAll('.requirement-item').forEach(item => {
                const icon = item.querySelector('i');
                if (item.classList.contains('valid')) {
                    icon.classList.remove('fa-times-circle');
                    icon.classList.add('fa-check-circle');
                } else {
                    icon.classList.remove('fa-check-circle');
                    icon.classList.add('fa-times-circle');
                }
            });

            checkPasswordMatch();
        }

        function checkPasswordMatch() {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            const matchItem = document.getElementById('match');
            
            const matches = newPassword === confirmPassword && confirmPassword !== '';
            matchItem.classList.toggle('valid', matches);
            
            const icon = matchItem.querySelector('i');
            if (matches) {
                icon.classList.remove('fa-times-circle');
                icon.classList.add('fa-check-circle');
            } else {
                icon.classList.remove('fa-check-circle');
                icon.classList.add('fa-times-circle');
            }
        }
      
    document.getElementById('passwordForm').addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Validate password requirements
        const newPassword = document.getElementById('newPassword').value;
        const confirmPassword = document.getElementById('confirmPassword').value;
        
        // Check if all requirements are met
        const requirements = document.querySelectorAll('.requirement-item');
        const allRequirementsMet = Array.from(requirements).every(item => 
            item.classList.contains('valid')
        );

        if (!allRequirementsMet) {
            Swal.fire({
                icon: 'error',
                title: 'Invalid Password',
                text: 'Please make sure all password requirements are met',
                confirmButtonColor: '#ff8800'
            });
            return;
        }

        try {
            const formData = new FormData(this);
            const response = await fetch('/changePassword', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    currentPassword: formData.get('currentPassword'),
                    newPassword: formData.get('newPassword'),
                    confirmPassword: formData.get('confirmPassword')
                })
            });

            const data = await response.json();

            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    confirmButtonColor: '#ff8800'
                });
                window.location.href = '/logout';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: data.message,
                    confirmButtonColor: '#ff8800'
                });
            }
        } catch (error) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!',
                confirmButtonColor: '#ff8800'
            });
        }
    });

    function resetForm() {
        document.getElementById('passwordForm').reset();
        document.querySelectorAll('.requirement-item').forEach(item => {
            item.classList.remove('valid');
            const icon = item.querySelector('i');
            icon.classList.remove('fa-check-circle');
            icon.classList.add('fa-times-circle');
        });
        
        Swal.fire({
            icon: 'info',
            title: 'Form Reset',
            text: 'Password form has been reset',
            confirmButtonColor: '#ff8800'
        });
    }

        function resetForm() {
            document.getElementById('passwordForm').reset();
            document.querySelectorAll('.requirement-item').forEach(item => {
                item.classList.remove('valid');
                const icon = item.querySelector('i');
                icon.classList.remove('fa-check-circle');
                icon.classList.add('fa-times-circle');
            });
            hideAlerts();
        }

        function hideAlerts() {
            document.getElementById('successAlert').style.display = 'none';
            document.getElementById('errorAlert').style.display = 'none';
        }

        function handlePasswordChange(event) {
            event.preventDefault();
            
            // Check if all requirements are met
            const requirements = document.querySelectorAll('.requirement-item');
            const allValid = Array.from(requirements).every(item => item.classList.contains('valid'));

            if (allValid) {
                document.getElementById('successAlert').style.display = 'block';
                document.getElementById('errorAlert').style.display = 'none';
                resetForm();
            } else {
                document.getElementById('errorAlert').style.display = 'block';
                document.getElementById('successAlert').style.display = 'none';
            }
        }

      

    </script>
</body>
</html>